// angular.module is a global place for creating, registering and retrieving Angular modules
// 'ifiske' is the name of this angular module (also set in a <body> attribute in index.html)
// the 2nd parameter is an array of 'requires'
// 'ifiske.controllers' is found in controllers.js

angular.module('ifiske', [
    'ionic',
    'ifiske.controllers',
    'ifiske.directives',
    'ifiske.api',
    'ifiske.db',
    'ifiske.utils',
    'ifiske.update',
    'ifiske.filters',
    'ionic.ion.headerShrink',
    'ngCordova',
    'systemBrowser',
    'ngCordovaSms',
    'ngMessages',
    'ImgCache',
    'leaflet-directive',
    'tabSlideBox'
])

.constant('$ionicLoadingConfig', {
    template: '<ion-spinner></ion-spinner>'
    // hideOnStateChange: true
})
.run(['$ionicPlatform', 'Update', 'ImgCache', function($ionicPlatform, Update, ImgCache) {
    $ionicPlatform.ready(function() {
        // Hide the accessory bar above the keyboard for form inputs
        if (window.ionic && window.ionic.Keyboard) {
            window.ionic.Keyboard.hideKeyboardAccessoryBar(true);
        }
        if (window.StatusBar) {
            // org.apache.cordova.statusbar required
            window.StatusBar.styleDefault();
        }

        ImgCache.$init();
        Update.update();
    });
}])

.config([
    '$stateProvider',
    '$urlRouterProvider',
    '$ionicConfigProvider',
    'ImgCacheProvider',
    function($stateProvider, $urlRouterProvider, $ionicConfigProvider, ImgCacheProvider) {

        ImgCacheProvider.setOptions({
            debug: false,
            usePersistentCache: true
        });
        ImgCacheProvider.manualInit = true;

        // Cache views in the forward stack
        $ionicConfigProvider.views.forwardCache(true);

        // Clear back button default text
        $ionicConfigProvider.backButton.previousTitleText(false).text('');

        // Tabs position
        $ionicConfigProvider.tabs.position('bottom');

        /**
         * Ionic uses AngularUI Router. Learn more here:
         * https://github.com/angular-ui/ui-router
         */

        var defaultUrl = '/app/login';
        if (window.localStorage.getItem('session')) {
            defaultUrl = '/app/home';
        }
        $urlRouterProvider.otherwise(defaultUrl);

        $stateProvider

        .state('app', {
            url: '/app',
            //abstract: true,
            templateUrl: 'components/menu/menu.html',
            controller: 'MenuCtrl'
        })

        .state('app.login', {
            url: '/login',
            templateUrl: 'components/login/login.html',
            controller: 'LoginCtrl'
        })

        // Account recovery
        .state('app.recover', {
            url: '/recover',
            templateUrl: 'components/recover/recover.html',
            controller: 'RecoverCtrl'
        })
        .state('app.recover.lostpassword', {
            url: '/lostpassword',
            templateUrl: 'components/recover/lostpassword.html'
        })
        .state('app.recover.resetpassword', {
            url: '/resetpassword',
            templateUrl: 'components/recover/resetpassword.html'
        })

        // Account registration
        .state('app.register', {
            url: '/register',
            templateUrl: 'components/register/register.html',
            controller: 'RegisterCtrl'
        })
        .state('app.register.details', {
            url: '/details',
            templateUrl: 'components/register/register_details.html'
        })
        .state('app.register.verify', {
            url: '/verify',
            templateUrl: 'components/register/register_verify.html'
        })

        //
        .state('app.home', {
            url: '/home',
            templateUrl: 'components/home/home.html',
            controller: 'HomeCtrl'
        })
        .state('app.info', {
            url: '/info',
            templateUrl: 'components/info/info.html'
        })

        .state('app.bugs', {
            url: '/info',
            templateUrl: 'components/menu/report.html'
        })
        .state('app.contact', {
            url: '/contact',
            templateUrl: 'components/contact/contact.html',
            controller: 'ContactCtrl'
        })
        .state('app.legal', {
            url: '/legal',
            templateUrl: 'components/legal/legal.html',
            controller: 'LegalCtrl'
        })
        .state('app.about', {
            url: '/about',
            templateUrl: 'components/about/about.html',
            controller: 'AboutCtrl'
        })
        .state('app.userinfo', {
            url: '/userinfo',
            controller: 'UserCtrl',
            templateUrl: 'components/user/user.html',
        })

        .state('app.counties', {
            url: '/counties',
            templateUrl: 'components/counties/counties.html',
            controller: 'CountiesCtrl'
        })
        .state('app.areas', {
            url: '/areas',
            params: {'id': false, 'county': false, 'search': ''},
            templateUrl: 'components/area_list/area_list.html',
            controller: 'AreasCtrl'
        })
        .state('app.cards', {
            url: '/cards',
            templateUrl: 'components/user_cards/user_cards.html',
            controller: 'UserCardsCtrl'
        })
        .state('app.favorites', {
            url: '/favorites',
            templateUrl: 'components/favorites/favorites.html'
        })
        .state('app.fishes', {
            url: '/fishes',
            templateUrl: 'components/fishes/fishes.html',
            controller: 'FishesCtrl'
        })
        .state('app.fishdetail', {
            url: '/fishdetail/:id',
            params: {'id': false, 'fish': false},
            templateUrl: 'components/fish_detail/fish_detail.html',
            controller: 'FishDetailCtrl'
        })
        .state('app.map', {
            url: '/map',
            templateUrl: 'components/map/map.html',
            controller: 'MapCtrl'
        })
        .state('app.techniques', {
            url: '/techniques',
            templateUrl: 'components/techniques/techniques.html',
            controller: 'TechniquesCtrl'
        })
        .state('app.techniquedetail', {
            url: '/techniquedetail/:id',
            params: {'id': false, 'tech': false},
            templateUrl: 'components/technique_detail/technique_detail.html',
            controller: 'TechniqueDetailCtrl'
        })
        .state('app.area', {
            url: '/area/:id',
            views: {
                '@app': {
                    templateUrl: 'components/area/area.html',
                    controller: 'AreaCtrl',
                },
                'info@app.area': {
                    templateUrl: 'components/area/info.html',
                    controller: 'AreaInfoCtrl'
                },
                'map@app.area': {
                    templateUrl: 'components/area/map.html',
                    controller: 'AreaMapCtrl'
                },
                'fishinfo@app.area': {
                    templateUrl: 'components/area/fish.html',
                    controller: 'AreaFishCtrl'
                },
                'cards@app.area': {
                    templateUrl: 'components/area/cards.html',
                    controller: 'AreaCardsCtrl'
                }
            }
        });
    }]);

angular.module('ifiske.controllers', []);
angular.module('ifiske.directives', []);

angular.module('ifiske.controllers')
.controller('AboutCtrl', [
    '$scope',
    '$cordovaAppVersion',
    '$ionicPlatform',
    '$ionicModal',
    'Update',
    'Licenses',
    function($scope, $cordovaAppVersion, $ionicPlatform, $ionicModal, Update, Licenses) {
        $scope.version = $scope.dbDate = 'Ok√§nt';
        $scope.update = Update;

        $ionicPlatform.ready(function() {
            if (window.cordova) {
                $cordovaAppVersion.getAppVersion().then(function(version) {
                    console.log('iFiske version:', version);
                    $scope.version = version;
                });
            }
            $scope.licenses = Licenses.get();
            $scope.alert = function(l) {
                var scope = $scope.$new();
                scope.l = l;
                $ionicModal.fromTemplateUrl(
                    'components/about/license_modal.html',
                    {scope: scope}
                ).then(function(modal) {
                    scope.closeModal = function() {
                        modal.hide();
                    };
                    modal.show();
                });

            };

        });
    }
]);

angular.module('ifiske.controllers')
.controller('AreaCardsCtrl', [
    '$scope',
    '$ionicModal',
    'localStorage',
    function($scope, $ionicModal, localStorage) {
        $scope.$on('$ionicView.beforeEnter', function() {
            //Area_Cards
            $scope.smsterms = localStorage.get('sms_terms');
            $scope.predicate = 'so';

            //SMS-modal
            $ionicModal.fromTemplateUrl('components/area/sms_modal.html', {
                scope: $scope,
                animation: 'slide-in-up'
            }).then(function(modal) {
                $scope.sms_modal = modal;
            });
            $scope.openModal = function(product) {
                $scope.sms_modal.show();
                $scope.product = product;
            };
            $scope.closeModal = function() {
                $scope.sms_modal.hide();
            };
            $scope.showTerms = function() {
                $scope.showingterms = !$scope.showingterms;
            };
            $scope.showingterms = false;

            //Rules modal
            $ionicModal.fromTemplateUrl('components/area/rules_modal.html', {
                scope: $scope,
                animation: 'slide-in-up'
            }).then(function(modal) {
                $scope.rules_modal = modal;
            });
            $scope.openRulesModal = function(product) {
                $scope.rules_modal.show();
                $scope.product = product;
            };
            $scope.closeRulesModal = function() {
                $scope.rules_modal.hide();
            };

            $scope.$on('$destroy', function() {
                $scope.sms_modal.remove();
                $scope.rules_modal.remove();
            });
        });
    }
]);

angular.module('ifiske.controllers')
.controller('AreaCtrl', [
    '$scope',
    '$stateParams',
    'DB',
    '$ionicSlideBoxDelegate',
    function($scope, $stateParams, DB, $ionicSlideBoxDelegate) {
        $scope.image_endpoint = 'http://www.ifiske.se/';

        DB.getArea($stateParams.id)
        .then(function(area) {
            $scope.area = area;
            $scope.$broadcast('ifiske-area');

            $scope.images = area.images;

            $ionicSlideBoxDelegate.$getByHandle('tabs').update();

            DB.getOrganization(area.orgid)
            .then(function(org) {
                $scope.org = org;
            });
        }, function(err) {
            console.log(err);
        });

        DB.getAreaFishes($stateParams.id)
        .then(function(fishes) {
            $scope.fishes = fishes;
            $ionicSlideBoxDelegate.$getByHandle('tabs').update();
        }, function(err) {
            console.log(err);
        });

        DB.getProductsByArea($stateParams.id)
        .then(function(products) {
            $scope.products = products;
            $ionicSlideBoxDelegate.$getByHandle('tabs').update();
        }, function(err) {
            console.log(err);
        });

    }
]);

angular.module('ifiske.controllers')
.controller('AreaFishCtrl', [
    '$scope',
    function($scope) {
        $scope.sortorder = '-amount';
        $scope.$on('$ionicView.beforeEnter', function() {
        });
    }
]);

angular.module('ifiske.controllers')
.controller('AreaInfoCtrl', [
    '$scope',
    '$ionicSlideBoxDelegate',
    function($scope, $ionicSlideBoxDelegate) {
        $scope.gotoProducts = function() {
            $ionicSlideBoxDelegate.$getByHandle('tabs').slide(1);
        };
        $scope.$on('$ionicView.beforeEnter', function() {
        });
    }
]);

angular.module('ifiske.controllers')
.controller('AreaMapCtrl', [
    '$scope',
    'DB',
    'leafletEvents',
    '$ionicPlatform',
    '$cordovaGeolocation',
    '$cordovaDeviceOrientation',
    '$timeout',
    'localStorage',
    function($scope, DB, leafletEvents, $ionicPlatform, $cordovaGeolocation, $cordovaDeviceOrientation, $timeout, localStorage) {
        function updateMypos(obj) {
            //rotate iconAngle 45 deg since the icon is tilted by default
            obj.iconAngle = (obj.iconAngle | 0) - 45;
            // We need to create a new named element in order for the update to register
            if ($scope.map.markers.mypos2) {
                angular.extend($scope.map.markers.mypos2, obj);
                $scope.map.markers.mypos = $scope.map.markers.mypos2;
                delete $scope.map.markers.mypos2;
            } else {
                angular.extend($scope.map.markers.mypos, obj);
                $scope.map.markers.mypos2 = $scope.map.markers.mypos;
                delete $scope.map.markers.mypos;
            }
        }
        /* might need for ios
           function getMypos() {
           return $scope.map.markers.mypos || $scope.map.markers.mypos2;
           }
           */

        var icons = {};
        var mapboxUrl = 'http://api.tiles.mapbox.com/v4/{maptype}/{z}/{x}/{y}@2x.png?access_token={apikey}';
        var apikey = localStorage.get('mapbox_api');

        var updateMap = function() {
            $scope.map.center = {
                lat: $scope.area.lat,
                lng: $scope.area.lng,
                zoom: Number($scope.area.zoom) ? Number($scope.area.zoom) : 9
            };

            DB.getPoiTypes()
            .then(function(poi_types) {
                for (var i = 0; i < poi_types.length; ++i) {
                    var type = poi_types[i];
                    icons[type.ID] = {
                        iconUrl: $scope.image_endpoint + type.icon,
                        iconAnchor: [16, 37], // point of the icon which will correspond to marker's location
                        popupAnchor: [0, -35],
                    };
                }
                DB.getPois($scope.area.orgid)
                .then(function(pois) {
                    for (var i = 0; i < pois.length; ++i) {
                        var poi = pois[i];

                        $scope.map.markers['poi' + i] = {
                            layer: 'pois',
                            lat: poi.la,
                            lng: poi.lo,
                            icon: icons[poi.type],
                            message: '<h4>' + poi.t + '</h4><p>' + poi.d + '</p>',
                            popupOptions: {
                                maxWidth: window.innerWidth - 50
                            }
                        };
                    }
                    $scope.map.markers.area = {
                        layer: 'pois',
                        lat: $scope.area.lat,
                        lng: $scope.area.lng,
                        message: $scope.area.t
                    };
                }, function(err) {
                    console.error(err);
                });
                DB.getPolygons($scope.area.orgid)
                .then(function(polygons) {
                    $scope.map.paths = polygons.map(function(poly) {
                        return {
                            latlngs: JSON.parse('[' + poly.poly + ']'),
                            color: poly.c,
                            weight: 2,
                            opacity: 0.5,
                            fillColor: poly.c,
                            type: 'polygon'
                        };
                    });
                }, function(err) {
                    console.error(err);
                });

            });
        };
        angular.extend($scope, {
            map: {
                center: {},
                paths: {},

                markers: {
                    mypos: {
                        lat: 0,
                        lng: 0,
                        iconAngle: 0,
                        message: 'Egen position',
                        icon: {
                            type: 'div',
                            iconSize: [40,40],
                            iconAnchor: [20,20],
                            className: 'icon ion-navigate myposition'
                        }
                    }
                },

                layers: {
                    baselayers: {
                        outdoors: {
                            name: 'Utomhus',
                            type: 'xyz',
                            url: mapboxUrl,
                            layerOptions: {
                                maptype: 'mapbox.outdoors',
                                apikey: apikey
                            }
                        },
                        satellite: {
                            name: 'Satellit',
                            type: 'xyz',
                            url: mapboxUrl,
                            layerOptions: {
                                maptype: 'mapbox.satellite',
                                apikey: apikey
                            }
                        }
                    },
                    overlays: {
                        pois: {
                            name: 'St√§llen',
                            type: 'markercluster',
                            visible: true,
                            layerOptions: {
                                showOnSelector: false,
                                disableClusteringAtZoom: 9,
                                chunkedLoading: true,
                                showCoverageOnHover: false,
                                removeOutsideVisibleBounds: true
                            }
                        }
                    }
                }
            }
        });

        $scope.$on('$ionicView.beforeEnter', function() {
            if ($scope.area) {
                updateMap();
            }
            $scope.$on('ifiske-area', updateMap);

            $ionicPlatform.ready(function() {
                $cordovaGeolocation.watchPosition({
                    frequency: 3000
                }).then(null, function(error) {
                    console.error(error);
                }, function(pos) {
                    $timeout(function() {
                        updateMypos({
                            lat: pos.coords.latitude,
                            lng: pos.coords.longitude
                        });
                    });
                });

                $cordovaDeviceOrientation.watchHeading({
                    frequency: 3000
                }).then(null, function(error) {
                    console.error(error);
                }, function(heading) {
                    $timeout(function() {
                        updateMypos({
                            iconAngle: heading.trueHeading
                        });
                    });
                });
            });

            $scope.navigate = function() {
                //var pos = getMypos(); //might need for ios
                $ionicPlatform.ready(function() {
                    launchnavigator.navigate(
                        [$scope.navto.lat, $scope.navto.lng],
                        null,
                        function() {
                            console.log('Opening navigator');
                        },
                        function(error) {
                            alert('Navigation failed!', error);
                        });
                });
            };

            var enabledEvents = ['popupopen', 'popupclose'];
            $scope.events = {
                enabled: enabledEvents
            };

            $scope.$on('leafletDirectiveMarker.popupopen', function(event, args) {
                //show navtobutton
                $scope.navto = args.model;
            });

            $scope.$on('leafletDirectiveMarker.popupclose', function() {
                //hide navtobutton
                $scope.navto = null;
            });
        });
    }
]);

angular.module('ifiske.controllers')
.controller('AreasCtrl', [
    '$scope',
    '$stateParams',
    '$ionicScrollDelegate',
    'DB',
    function($scope, $stateParams, $ionicScrollDelegate, DB) {

        var copy = $stateParams.search;
        $scope.search = copy;
        $scope.county = $stateParams.county || 'S√∂kresultat';
        DB.search('', $stateParams.id)
        .then(function(data) {
            $scope.areas = data;
        }, function(err) {
            console.log(err);
        });
        $scope.clearSearch = function() {
            $scope.search = '';
        };
        $scope.scrollTop = function() {
            $ionicScrollDelegate.scrollTop();
        };

    }
]);


angular.module('ifiske.controllers')
.controller('ContactCtrl', ['$scope', '$state', 'localStorage', function($scope, $state, localStorage) {
        $scope.contactInfo = localStorage.get('contactInfo');
}]);

angular.module('ifiske.controllers')
.controller('CountiesCtrl', ['$scope', 'DB', function($scope, DB) {
    DB.getCounties()
    .then(function(data) {
        $scope.counties = data;
    }, function(err) {
        console.log(err);
    });
}]);

angular.module('ifiske.controllers')
.controller('FishDetailCtrl', ['$scope', '$stateParams', 'DB', function($scope, $stateParams, DB) {
    $scope.fish = $stateParams.fish;
    $scope.image_endpoint = 'http://www.ifiske.se';
    if(!$scope.fish) {
        DB.getFish($stateParams.id)
        .then(function(data) {
            $scope.fish = data;
    console.log($scope.fish);
        }, function(err) {
            console.log(err);
        });
    }
    console.log($scope.fish);
}]);

angular.module('ifiske.controllers')
.controller('FishesCtrl', ['$scope', 'DB', function($scope, DB) {
    $scope.sortorder = 'so';
    $scope.image_endpoint = 'http://www.ifiske.se';
    DB.getFishes()
    .then(function(data) {
        $scope.fishes = data;
        $scope.default_img = data[0].img;
    }, function(err) {
        console.log(err);
    });
}]);

angular.module('ifiske.controllers')
.controller('HomeCtrl', [
    '$scope',
    '$state',
    '$ionicHistory',
    'localStorage',
    'sessionData',
    'Update',
    function($scope, $state, $ionicHistory, localStorage, sessionData, Update) {

        $scope.loggedIn = sessionData;

        $scope.update = Update;

        // Current history stack Id. See area_controller for usage.
        localStorage.set('homeHistoryId', $ionicHistory.currentHistoryId());

        $scope.myFunc = function($event) {
            if($event.keyCode == 13 && !$event.shiftKey) { //if enter-key
                $state.go('app.areas', {search: $event.srcElement.value});
            }

        };
    }
]);

angular.module('ifiske.controllers')
.controller('LegalCtrl', ['$scope', '$state', 'localStorage', function($scope, $state, localStorage) {
    $scope.tos = localStorage.get('tos');
}]);

angular.module('ifiske.controllers')
.controller('LoginCtrl', [
    '$scope',
    '$state',
    'Update',
    '$ionicLoading',
    '$ionicHistory',
    '$ionicViewSwitcher',
    function($scope, $state, Update, $ionicLoading, $ionicHistory, $ionicViewSwitcher) {

        /**
         * signIn
         * Submit handler for login form. Validates login input.
         * Moves to home view on successful login.
         */
        $scope.signIn = function(loginForm) {
            $ionicLoading.show();

            Update.user_login(loginForm.username.$viewValue, loginForm.password.$viewValue)
            .then(function() {
                $ionicLoading.hide();
                loginForm.$setValidity('loginError', true);
                $ionicViewSwitcher.nextDirection('forward');
                $ionicHistory.nextViewOptions({
                    disableBack: true,
                    historyRoot: true
                });
                $state.go('app.home');
            }, function(error) {
                $ionicLoading.hide();
                loginForm.$setValidity('loginError', false);
                $scope.error = error.response;
            });
        };

        /**
         * skip
         * Skips to the home view. Forces forward transition and sets home as root view.
         */
        $scope.skip = function() {
            $ionicViewSwitcher.nextDirection('forward');
            $ionicHistory.nextViewOptions({
                disableBack: true,
                historyRoot: true
            });
            $state.go('app.home');
        };
    }
]);

angular.module('ifiske.controllers')
.controller('MapCtrl', [
    '$scope',
    'leafletData',
    '$ionicPlatform',
    'DB',
    '$cordovaGeolocation',
    '$cordovaDeviceOrientation',
    '$timeout',
    'localStorage',
    function($scope, leafletData, $ionicPlatform, DB, $cordovaGeolocation, $cordovaDeviceOrientation, $timeout, localStorage) {

        function updateMypos(obj) {
            //rotate iconAngle 45 deg since the icon is tilted by default
            obj.iconAngle = (obj.iconAngle | 0) - 45;
            /* Hackfix to make it update =( */
            if($scope.markers.mypos2) {
                angular.extend($scope.markers.mypos2, obj);
                $scope.markers.mypos = $scope.markers.mypos2;
                delete $scope.markers.mypos2;
            } else {
                angular.extend($scope.markers.mypos, obj);
                $scope.markers.mypos2 = $scope.markers.mypos;
                delete $scope.markers.mypos;
            }
        }

        var mapboxUrl = 'http://api.tiles.mapbox.com/v4/{maptype}/{z}/{x}/{y}@2x.png?access_token={apikey}';
        var apikey = localStorage.get('mapbox_api');

        angular.extend($scope, {
            center: {
                lat: 62.0,
                lng: 15.0,
                zoom: 5
            },
            layers: {
                baselayers: {
                    outdoors: {
                        name: 'Utomhus',
                        type: 'xyz',
                        url: mapboxUrl,
                        layerOptions: {
                            maptype: 'mapbox.outdoors',
                            apikey: apikey
                        }
                    },
                    satellite: {
                        name: 'Satellit',
                        type: 'xyz',
                        url: mapboxUrl,
                        layerOptions: {
                            maptype: 'mapbox.satellite',
                            apikey: apikey
                        }
                    }
                },
                overlays: {
                    fishareas: {
                        name: 'Fiskeomr√•den',
                        type: 'markercluster',
                        visible: true,
                        layerOptions: {
                            showOnSelector: false,
                            disableClusteringAtZoom: 9,
                            chunkedLoading: true,
                            showCoverageOnHover: false,
                            removeOutsideVisibleBounds: true
                        }
                    },
                }
            },
            markers: {
                mypos: {
                    lat: 0,
                    lng: 0,
                    iconAngle: -45,
                    message: 'Din position',
                    icon: {
                        type: 'div',
                        iconSize: [40,40],
                        iconAnchor: [20,20],
                        className: 'icon ion-navigate myposition'
                    }
                }
            }
        });

        $ionicPlatform.ready(function() {
            $cordovaGeolocation.watchPosition({
                frequency: 3000
            }).then(null, function(error) {
                console.error(error);
            }, function(pos) {
                $timeout(function(){
                    updateMypos({
                        lat: pos.coords.latitude,
                        lng: pos.coords.longitude
                    });
                });
            });

            $cordovaDeviceOrientation.watchHeading({
                frequency: 3000
            }).then(null, function(error) {
                console.error(error);
            }, function(heading) {
                $timeout(function(){
                    updateMypos({
                        iconAngle: heading.trueHeading
                    });
                });
            });
        });

        var createscope = function(a) {
            return function() {
                var new_scope = $scope.$new();
                new_scope.area = a;
                console.log(a);
                return new_scope;
            };
        };

        $scope.$on('$ionicView.beforeEnter', function() {
            DB.search('').then(function(areas) {
                for(var i = 0; i < areas.length; ++i) {
                    var a = areas[i];
                    $scope.markers['area' + i] = {
                        layer: 'fishareas',
                        lat: a.lat,
                        lng: a.lng,
                        getMessageScope: createscope(a),
                        message: '<a ui-sref="app.area({id: area.ID })">{{area.t}}</a>'
                    };
                }
            });
        });
    }
]);

angular.module('ifiske.controllers')
.controller('MenuCtrl', [
    '$scope',
    '$state',
    '$ionicViewSwitcher',
    '$ionicPopover',
    'sessionData',
    'Update',
    function($scope, $state, $ionicViewSwitcher, $ionicPopover, sessionData, Update) {

        $scope.sessionData = sessionData;

        $ionicPopover.fromTemplateUrl('components/menu/popover.html', {
            scope: $scope
        }).then(function(popover) {
            $scope.popover = popover;
        });

        $scope.userinfo = function() {
            $scope.popover.hide();
            $state.go('app.userinfo');
        };
        $scope.logout = function() {
            $scope.popover.hide();
            Update.user_logout();

            $state.go('app.login');
        };
        $scope.login = function() {
            $scope.popover.hide();
            $ionicViewSwitcher.nextDirection('back');
            $state.go('app.login');
        };
        $scope.register = function() {
            $scope.popover.hide();
            $state.go('app.register.details');
        };

        $scope.forcedUpdate = function() {
            Update.forcedUpdate();
        };

    }
]);


angular.module('ifiske.controllers')
    .controller('RecoverCtrl', [
	'$scope',
	'$state',
	'$ionicHistory',
	'$ionicPlatform',
	'$ionicLoading',
	'$cordovaToast',
	'API',
	function($scope, $state, $ionicHistory, $ionicPlatform, $ionicLoading, $cordovaToast, API) {
	    'use strict';
	    
	    var user = "";
	    
	    /**
             * ToDo: use to skip from lostpassword to resetpassword
	     * skip
	     * Submit handler for skip button
	     */
            /*
	      $scope.skip = function() {
	      $scope.info = "";
	      $state.go('^.resetpassword');
	      };
            */	    

	    /**
	     * lostPassword
	     * Submit handler for first form
	     */
	    $scope.lostPassword = function(form) {

	        $ionicLoading.show();

	        user = form.user.$viewValue;

	        API.user_lost_password(user)
		    .then(function(data) {
			
			// Set info message for next view
			$scope.info = 'En √•terst√§llningskod kommer skickas till dig inom kort, via ';			
			if (data.mailed) {
			    $scope.info += 'e-mail';
			    if (data.texted) {
				$scope.info += ' och ';
			    }
			}
			if (data.texted) {
			    $scope.info += 'SMS';
			}
                        
			$state.go('^.resetpassword');

		    }, function(error) {
			//ToDo: handle timeout?
			//ToDo: check error codes?
			form.user.$setValidity('invalidUser', false);
		    })
		    .finally($ionicLoading.hide);
	    };


	    /**
	     * resetPassword
	     * Submit handler for second form
	     *
	     * ToDo: log in immediately?
	     */
	    $scope.resetPassword = function(form) {
		$ionicLoading.show();
		
		
		API.user_reset_password(user, form.password.$viewValue, form.code.$viewValue)
		    .then(function(data) {
		
                        //ToDo: handle timeouts?

                        //ToDo: .ready() needed?
	                // Success toast
		        $ionicPlatform.ready(function() {
		            $cordovaToast.showLongBottom('Ditt l√∂senord har √§ndrats');
		        });
	        			
                        $state.go('app.login');

                        // Navigate to current history root?
			//$ionicHistory.goToHistoryRoot($ionicHistory.currentView().historyId);	
		    }, function(error) {
                        switch(error.error_code) {
                        /*case 5:
                            //invalide username
                            break;*/
                        /*case 13:
                            form.password.$setValidity('passwordLength', false);
                            break;*/
                        case 16:
		            form.code.$setValidity('invalidCode',false);
                            break;
                        }
		    })
		    .finally($ionicLoading.hide);
	    };
	}]);

angular.module('ifiske.controllers')
    .controller('RegisterCtrl', [
        '$scope',
        '$state',
        '$ionicLoading',
        '$ionicModal',
        '$ionicScrollDelegate',
        '$ionicPlatform',
        '$cordovaToast',
        'API',
        'localStorage',
        function($scope, $state, $ionicLoading, $ionicModal, $ionicScrollDelegate, $ionicPlatform, $cordovaToast, API, localStorage) {

            var username;

            // Live check for username availability
            $scope.checkUsername = function(input) {
                API.user_exists(input.$viewValue)
                    .then(function(data) {
                        input.$setValidity('nameTaken', !data);
                    });
            };

            // Live check for email availability
            $scope.checkEmail = function(input) {
                API.user_exists(null, input.$viewValue)
                    .then(function(data) {
                        input.$setValidity('emailTaken', !data);
                    });
            };


            // Validation errors not tied to input field
            $scope.formErrors = {};

            /**
             * register
             * Submit handler for the registration form
             */
            $scope.register = function(form) {
                $ionicLoading.show();

                // Save phone number for next view
                $scope.phone = form.phone.$viewValue;

                // Save username for verify submit handler
                username = form.username.$viewValue;

                var password = form.password.$viewValue;
                var fullname = form.fullname.$viewValue;
                var email = form.email.$viewValue;

                API.user_register(username, fullname, password, email, $scope.phone)
                    .then(function(data) {
                        // Success: Go to verify account view
                        $ionicLoading.hide();
                        $scope.formErrors = {};
                        $state.go('^.verify');

                    }, function(error) {
                        /**
                         * Error: Inform the user about failed registration
                         * See API documentation for error codes
                         *
                         * ToDo: Handle timeout
                         */
                        $scope.formErrors.registrationError = true;
                        $ionicScrollDelegate.scrollTop(true);

                        // Invalid Email
                        if (error.error_code == 8) {
                            form.email.$setValidity('invalidEmail', false);
                        }
                        // Username or Email already registered
                        if (error.error_code == 9) {
                            $scope.checkUsername(form.username);
                            $scope.checkEmail(form.email);
                        }
                        // Invalid phone number
                        if (error.error_code == 10) {
                            form.phone.$setValidity('invalidPhone', false);
                        }

                        $ionicLoading.hide();
                    });
            };


            /**
             * verify
             * Submit handler for the verification form
             */
            $scope.verify = function(form) {
                $ionicLoading.show();

                var vercode = form.vercode;

                API.user_confirm(username, vercode.$viewValue)
                    .then(function(data) {
                        $ionicPlatform.ready(function() {
                            $cordovaToast.showLongBottom('Ditt konto har skapats');
                        });
                        $scope.formErrors.validationError = false;
                        $state.go('app.login');
                    }, function(error) {
                        if (error.error_code) {
                            vercode.$setValidity("verified", false);
                        } else {
                            $scope.formErrors.validationError = true;
                        }
                    })
                    .finally($ionicLoading.hide());
            };


            $scope.tos = localStorage.get('tos');
            //Modal with the EULA
            $ionicModal.fromTemplateUrl('components/register/eula.html', {
                scope: $scope,
                animation: 'slide-in-up'
            }).then(function(modal) {
                $scope.eula = modal;
            });
            $scope.showEula = function() {
                $scope.eula.show();
            };
            $scope.closeEula = function() {
                $scope.eula.hide();
            };
            $scope.$on('$destroy', function() {
                $scope.eula.remove();
            });

        }]);

angular.module('ifiske.controllers')
.controller('TechniqueDetailCtrl', ['$scope', '$stateParams', 'DB', '$ionicSlideBoxDelegate', function($scope, $stateParams, DB, $ionicSlideBoxDelegate) {
    $scope.image_endpoint = 'http://www.ifiske.se';
    $scope.tech = $stateParams.tech;
    $scope.images = [];

    if(!$scope.tech) {
        DB.getTechnique($stateParams.id)
        .then(function(data) {
            $scope.images = [data.img1, data.img2, data.img3].filter(function(el) {
                return !/\/$/.test(el);
            });

            $ionicSlideBoxDelegate.update();
            $scope.tech = data;
        });
    } else {
        var data = $scope.tech;
        $scope.images = [data.img1, data.img2, data.img3].filter(function(el) {
            return !/\/$/.test(el);
        });

        $ionicSlideBoxDelegate.update();
    }
}]);

angular.module('ifiske.controllers')
.controller('TechniquesCtrl', ['$scope', 'DB', function($scope, DB) {
    DB.getTechniques()
    .then(function(data) {
        console.log(data);
        $scope.techniques = data;
    });
    $scope.image_endpoint = 'http://www.ifiske.se';
    $scope.sortorder = 'so';

}]);

angular.module('ifiske.controllers')
.controller('UserCtrl', ['$scope', 'DB', function($scope, DB) {
    DB.getUserInfo()
    .then(function(user) {
        $scope.user = user;
    });
    DB.getUserNumbers()
    .then(function(numbers) {
        $scope.numbers = numbers;
    });
}]);

angular.module('ifiske.controllers')
.controller('UserCardsCtrl', [
    '$scope',
    '$stateParams',
    'DB',
    'Update',
    '$ionicModal',
    '$ionicLoading',
    function($scope, $stateParams, DB, Update, $ionicModal, $ionicLoading) {
        $scope.pred = '-to';
        $scope.endpoint = 'https://www.ifiske.se';

        var initilize = function() {
            $ionicLoading.show();
            var a = Update.update();
            console.log(a);
            a.then(function(hi) {
                console.log(hi);
            });
            a.finally(function() {
                console.log('hello√§');
                $scope.now = Date.now();
                DB.getUserProducts()
                .then(function(data) {
                    $scope.products = data;
                    console.log($scope);
                    $scope.$broadcast('scroll.refreshComplete');
                    $ionicLoading.hide();
                }, function(err) {
                    console.log(err);
                    $scope.$broadcast('scroll.refreshComplete');
                    $ionicLoading.hide();
                });
            });
        };

        $scope.$on('$ionicView.beforeEnter', initilize);
        //use the same modal as in area_cards
        $ionicModal.fromTemplateUrl('components/area_cards/rules_modal.html', {
            scope: $scope,
            animation: 'slide-in-up'
        }).then(function(modal) {
            $scope.rules_modal = modal;
        });
        $scope.openRulesModal = function(product) {
            $scope.rules_modal.show();
            console.log(product);
            $scope.product = product;
        };
        $scope.closeRulesModal = function() {
            $scope.rules_modal.hide();
        };

        $scope.$on('$destroy', function() {
            $scope.rules_modal.remove();
        });
        $scope.update = function() {
            initilize();
        };
    }
]);

(function(angular, undefined) {
    'use strict';

    angular.module('ifiske.api', ['ifiske.utils'])
    .provider('API', function APIProvider() {

        this.base_url = 'https://www.ifiske.se/api/v2/api.php';

        this.$get = [
            '$http',
            'sessionData',
            'localStorage',
            '$q',
            function($http, sessionData, localStorage, $q) {
                var base_url = this.base_url;

                /**
                 * # api_call #
                 * handles http requests
                 * returns a $http object for the requested api call
                 */
                var api_call = function(params, cache) {
                    return $q(function(fulfill, reject) {
                        $http(
                            {
                                method:'get',
                                url: base_url,
                                params: angular.extend(params, {'key': '0123456789abcdef'}),
                                timeout: 5000,
                                cache: (cache !== false)
                            }
                        )
                        // ToDo: Proper logging
                        .success(function(data) {
                            if (data.status === 'error') {
                                reject(data.message);
                            } else {
                                if (data.data) {
                                    fulfill(data.data.response);
                                } else {
                                    reject(data);
                                }
                            }
                        })
                        //.error(function(data, status, headers, config, statusText) {
                        .error(function(data, status) {
                            if (status === 0) {
                                reject(new Error('Request timeout'));
                            } else {
                                reject(data);
                            }
                        });
                    });
                };

                /**
                 * # session_api_call #
                 * wrapper for api_call - inserts the session token into params
                 */
                var session_api_call = function(params, cache) {
                    var session = sessionData.token;
                    return api_call(angular.extend(params, {s: session}), cache);
                };

                return {
                    get_municipalities: function() {
                        return api_call({m: 'get_municipalities'});
                    },
                    get_counties: function() {
                        return api_call({m: 'get_counties'});
                    },
                    user_exists: function(username, email) {
                        var args = {m: 'user_exists'};

                        if (username && typeof username === 'string') {
                            args.username = username;
                        }
                        if (email && typeof email === 'string') {
                            args.email = email;
                        }

                        return api_call(args, false);
                    },
                    user_register: function(username, fullname, password, email, phone) {
                        return api_call(
                            {m: 'user_register',
                                username: username,
                                fullname: fullname,
                                password: password,
                                email: email,
                                phone: phone
                            }, false);
                    },
                    user_confirm: function(username, pin) {
                        return api_call({
                            m: 'user_confirm',
                            username: username,
                            pin: pin
                        }, false);
                    },
                    user_info: function() {
                        return session_api_call({m: 'user_info'});
                    },
                    user_lost_password: function(user) {
                        return api_call(
                            {m: 'user_lost_password',
                                user_identification: user
                            }, false);
                    },
                    user_reset_password: function(user_identification, password, code) {
                        return api_call({
                            m: 'user_reset_password',
                            user_identification: user_identification,
                            password: password,
                            code: code
                        }, false);
                    },
                    user_change_password: function(old_password, new_password) {
                        return session_api_call({
                            m: 'user_change_password',
                            old_password: old_password,
                            new_password: new_password
                        }, false);
                    },
                    user_login: function(username, password) {
                        return api_call(
                            {m: 'user_login',
                                username: username,
                                password: password
                            }, false)
                            .then(function(data) {
                                sessionData.setToken(data);

                                //needed for chaining of promises
                                return data;
                            });
                    },
                    user_logout: function() {
                        session_api_call({m: 'user_logout'}, false)
                        .then(function() {
                            sessionData.deleteToken();
                        });
                    },
                    user_products: function() {
                        return session_api_call({m: 'user_products'}, false);
                    },
                    get_fishes: function() {
                        return api_call({m: 'get_fishes'});
                    },
                    get_techniques: function() {
                        return api_call({m: 'get_techniques'});
                    },
                    get_baits: function() {
                        return api_call({m: 'get_baits'});
                    },
                    get_organizations: function(orgid) {
                        return api_call(
                            {m: 'get_organizations',
                                orgid: orgid
                            });
                    },
                    get_org_modified: function(orgid) {
                        return api_call(
                            {m: 'get_org_modified',
                                orgid: orgid
                            });
                    },
                    get_areas: function(areaid) {
                        return api_call(
                            {m: 'get_areas',
                                areaid: areaid
                            });
                    },
                    get_areas_modified: function(areaid) {
                        return api_call(
                            {m: 'get_areas_modified',
                                areaid: areaid
                            });
                    },
                    get_products: function(areaid) {
                        return api_call(
                            {m: 'get_products',
                                areaid: areaid
                            });
                    },
                    get_rules: function(ruleid) {
                        return api_call(
                            {m: 'get_rules',
                                ruleid: ruleid
                            });
                    },
                    get_photos: function(orgid, areaid) {
                        return api_call(
                            {m: 'get_photos',
                                orgid: orgid,
                                areaid: areaid
                            });
                    },
                    get_map_pois: function(orgid) {
                        return api_call(
                            {m: 'get_map_pois',
                                orgid: orgid
                            });
                    },
                    get_map_poi_types : function() {
                        return api_call({m: 'get_map_poi_types'});
                    },
                    get_map_polygons: function(orgid) {
                        return api_call(
                            {m: 'get_map_polygons',
                                orgid: orgid
                            });
                    },
                    user_get_favorites: function() {
                        return session_api_call({m: 'user_get_favorites'}, false);
                    },
                    get_terms_of_service: function() {
                        return api_call({m: 'get_terms_of_service'});
                    },
                    get_contact_info: function() {
                        return api_call({m: 'get_contact_info'});
                    },
                    get_engine_policies: function() {
                        return api_call({m: 'get_engine_policies'});
                    },
                    get_sms_terms: function() {
                        return api_call({m: 'get_sms_terms'});
                    },
                    get_mapbox_api: function() {
                        return api_call({m: 'get_mapbox_apiaccesstoken'});
                    }
                };
            }];
    });
})(window.angular);

(function(angular, undefined) {
    'use strict';

    angular.module('ifiske.db', [])
    .provider('DB', function DBProvider() {

        this.$get = [
            '$cordovaSQLite',
            'API',
            '$q',
            function($cordovaSQLite, API, $q) {

                var db;
                if (window.sqlitePlugin) {
                    db = $cordovaSQLite.openDB('fiskebasen.db');
                } else if (window.openDatabase) {
                    db = window.openDatabase(
                        'fiskebasen.db', '1.0', 'fiskebasen', 10 * 1024 * 1024);
                } else {
                    console.log('Not supported on this device, sorry');
                    return undefined;
                }

                var tableDef = {
                    'Area': [
                        ['ID',    'int'],
                        ['orgid', 'int'],
                        ['t',     'text'],
                        ['kw',    'text'],
                        ['note',  'text'],
                        ['c1',    'int'],
                        ['c2',    'int'],
                        ['c3',    'int'],
                        ['m1',    'int'],
                        ['m2',    'int'],
                        ['m3',    'int'],
                        ['lat',   'real'],
                        ['lng',   'real'],
                        ['zoom',  'text'],
                        ['pnt',   'int'],
                        ['car',   'int'],
                        ['eng',   'int'],
                        ['hcp',   'int'],
                        ['map',   'text'],
                        ['wsc',   'int'],
                        ['mod',   'int'],
                        ['d',     'text']
                    ],
                    'Area_Fish': [
                        ['ID',       'text'],
                        ['aid',      'int'],
                        ['fid',      'int'],
                        ['amount',   'int'],
                        ['comment',  'text']
                    ],
                    'Product': [
                        ['ID',     'int'],
                        ['t',      'text'],
                        ['t2',     'text'],
                        ['no',     'text'],
                        ['im',     'text'],
                        ['pf',     'text'],
                        ['ai',     'int'],
                        ['ri',     'int'],
                        ['ch',     'int'],
                        ['price',  'int'],
                        ['mod',    'int'],
                        ['so',     'int'],
                        ['hl',     'text']
                    ],
                    'County': [
                        ['ID',   'int'],
                        ['s',    'text'],
                        ['t',    'text'],
                        ['d',    'text']
                    ],
                    'Municipality': [
                        ['ID',    'int'],
                        ['cID',   'int'],
                        ['name',  'text']
                    ],
                    'Fish': [
                        ['ID',    'int'],
                        ['t',     'text'],
                        ['d',     'text'],
                        ['mod',   'int'],
                        ['so',    'int'],
                        ['max',   'int'],
                        ['icon',  'text'],
                        ['img',   'text'],
                        ['in',    'text'],
                        ['geo',   'text'],
                        ['size',  'text'],
                        ['lat',   'text'],
                        ['rec',   'text']
                    ],
                    'Rule': [
                        ['ID',   'int'],
                        ['ver',  'int'],
                        ['d',    'text'],
                        ['t',    'text']
                    ],
                    'User_Product': [
                        ['ID',        'int'],
                        ['at',        'int'],
                        ['code',      'int'],
                        ['fr',        'int'],
                        ['fullname',  'text'],
                        ['ot',        'text'],
                        ['ref1',      'int'],
                        ['ref2',      'int'],
                        ['t',         'text'],
                        ['to',        'int'],
                        ['pid',       'int'],
                        ['pdf',       'text']
                    ],
                    'User_Info': [
                        ['ID',        'int'],
                        ['username',  'text'],
                        ['loggedin',  'text'],
                        ['IP1',       'text'],
                        ['IP2',       'text'],
                        ['name',      'text'],
                        ['email',     'text'],
                        ['created',   'text']
                    ],
                    'User_Number': [
                        ['number', 'text']
                    ],
                    'Technique': [
                        ['ID',       'int'],
                        ['t',        'text'],
                        ['d',        'text'],
                        ['so',       'int'],
                        ['de',       'text'],
                        ['da',       'text'],
                        ['icon',     'text'],
                        ['img1',     'text'],
                        ['img2',     'text'],
                        ['img3',     'text'],
                        ['youtube',  'text']
                    ],
                    'Organization': [
                        ['ID',     'int'],
                        ['t',      'text'],
                        ['d',      'text'],
                        ['cp',     'text'],
                        ['url',    'text'],
                        ['co',     'int'],
                        ['mod',    'int'],
                        ['vat',    'int'],
                        ['dp',     'int'],
                        ['fva',    'int'],
                        ['org',    'int'],
                        ['ml',     'int']
                    ],
                    'Poi': [
                        ['ID',     'int'],
                        ['orgid',  'int'],
                        ['type',   'int'],
                        ['price',  'int'],
                        ['t',      'text'],
                        ['d',      'text'],
                        ['la',     'real'],
                        ['lo',     'real']
                    ],
                    'Poi_Type': [
                        ['ID',     'int'],
                        ['t',      'text'],
                        ['icon',   'text'],
                    ],
                    'Polygon': [
                        ['ID',     'int'],
                        ['orgid',  'int'],
                        ['t',      'text'],
                        ['c',      'text'],
                        ['ver',    'int'],
                        ['mod',    'int'],
                        ['poly',   'text']
                    ]

                };

                var createObject = function(data) {
                    var retval = [];
                    for (var i = 0; i < data.rows.length; ++i) {
                        retval.push(data.rows.item(i));
                    }
                    return retval;
                };

                return {
                    populateTable: function(table, data) {
                        return $q(function(fulfill, reject) {
                            db.transaction(function(tx) {
                                tx.executeSql('DELETE FROM ' + table + ';');

                                for (var id in data) {
                                    var singleData = data[id];
                                    var insertData = [];
                                    for (var i = 0; i < tableDef[table].length; ++i) {
                                        insertData.push(singleData[tableDef[table][i][0]]);
                                    }
                                    var query = [
                                        'INSERT INTO',
                                        table,
                                        'VALUES(?',
                                        ',?'.repeat(insertData.length - 1),
                                        ')'
                                    ].join(' ');

                                    tx.executeSql(query, insertData);
                                }
                            },
                            reject,
                            fulfill);
                        });

                    },

                    cleanTable: function(table) {
                        return $q(function(fulfill, reject) {
                            db.transaction(function(tx) {
                                tx.executeSql('DELETE FROM ' + table + ';');
                            },
                            reject,
                            fulfill);
                        });
                    },

                    /**
                     * Drops all tables in the database
                     * @method clean
                     */
                    clean: function() {
                        return $q(function(fulfill, reject) {
                            db.transaction(
                                function(tx) {
                                    for (var table in tableDef) {
                                        tx.executeSql('DROP TABLE IF EXISTS ' + table + ';');
                                    }
                                },
                                reject,
                                fulfill
                            );
                        })
                        .then(function() {
                            console.log('Removed all tables');
                        });
                    },

                    /**
                     * Initialies the tables in the database
                     * @method init
                     */
                    init: function() {
                        return $q(function(fulfill, reject) {
                            db.transaction(function(tx) {
                                for (var t in tableDef) {
                                    var table = tableDef[t];
                                    var tableValues = [];

                                    /*
                                     * Builds a string with "" around all names, so that
                                     * it can be used to create an SQL Table witout having
                                     * to worry about using reserved keywords.
                                     */
                                    for (var i = 0; i < table.length; ++i) {
                                        tableValues.push('"' + table[i][0] + '" ' + table[i][1]);
                                    }
                                    tableValues = tableValues.join(', ');

                                    var query = [
                                        'CREATE TABLE IF NOT EXISTS',
                                        t,
                                        '(',
                                        tableValues,
                                        ', PRIMARY KEY(',
                                        '"' + table[0][0] + '"',
                                        '));'
                                    ].join(' ');
                                    tx.executeSql(query);
                                }
                            },
                            reject,
                            fulfill);
                        });
                    },



                    /**
                     * Gets information about an area
                     * @method getArea
                     * @param {Integer} id
                     */
                    getArea: function(id) {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT *',
                                'FROM Area',
                                'WHERE id = ?'
                            ].join(' '), [id])
                            .then(function(area) {
                                var object = createObject(area)[0];
                                //TODO: DB should not need API
                                API.get_photos(object.orgid)
                                .then(function(images) {
                                    object.images = images;
                                    fulfill(object);
                                }, function(err) {
                                    console.warn(err);
                                    fulfill(object);
                                });
                            }, reject);
                        });
                    },

                    getAreaFishes: function(aid) {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT *',
                                'FROM Area_Fish',
                                'JOIN Fish ON Area_Fish.fid = Fish.ID',
                                'WHERE Area_Fish.aid = ?'
                            ].join(' '), [aid])
                            .then(function(data) {
                                fulfill(createObject(data));
                            }, reject);
                        });
                    },

                    /**
                     * Searches the database using a query
                     *
                     * The query is matched to a name and/or keyword
                     * @method search
                     * @param {String} searchstring
                     */
                    search: function(searchstring, county_id) {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT *',
                                'FROM Area',
                                'WHERE t LIKE ?',
                                (county_id ? 'AND c1 = ?' : ''),
                                'ORDER BY t'
                            ].join(' '),
                            county_id ?
                                ['%' + searchstring + '%', county_id] :
                                ['%' + searchstring + '%'])
                            .then(function(data) {
                                fulfill(createObject(data));
                            }, reject);
                        });
                    },

                    /**
                     * Gets information about a product
                     * @method getProduct
                     * @param {Integer} product_id
                     */
                    getProduct: function(product_id) {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT DISTINCT Product.*,',
                                'Rule.t as rule_t,',
                                'Rule.ver as rule_ver,',
                                'Rule.d as rule_d',
                                'FROM Product',
                                'JOIN Rule ON Rule.ID = Product.ri',
                                'WHERE ID = ?',
                                'ORDER BY so'
                            ].join(' '),
                            [product_id])
                            .then(function(data) {
                                fulfill(createObject(data));
                            }, reject);
                        });
                    },

                    /**
                     * Gets all products from an area
                     * @method getProductsByArea
                     * @param {Integer} area_id
                     */
                    getProductsByArea: function(area_id) {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT DISTINCT Product.*,',
                                'Rule.t as rule_t,',
                                'Rule.ver as rule_ver,',
                                'Rule.d as rule_d',
                                'FROM Product',
                                'JOIN Rule ON Rule.ID = Product.ri',
                                'WHERE ai = ?',
                                'ORDER BY so'
                            ].join(' '),
                            [area_id])
                            .then(function(data) {
                                fulfill(createObject(data));
                            }, reject);
                        });
                    },

                    getCounties: function() {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT DISTINCT County.*',
                                'FROM County',
                                'JOIN Area ON Area.c1 = County.ID',
                                'ORDER BY County.t'
                            ].join(' '))
                            .then(function(data) {
                                fulfill(createObject(data));
                            }, reject);
                        });
                    },

                    getUserProducts: function() {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT User_Product.*,',
                                'Rule.t as rule_t,',
                                'Rule.ver as rule_ver,',
                                'Rule.d as rule_d',
                                'FROM User_Product',
                                'LEFT JOIN Product ON Product.ID = User_Product.pid',
                                'LEFT JOIN Rule ON Rule.ID = Product.ri'
                            ].join(' '))
                            .then(function(data) {
                                fulfill(createObject(data));
                            }, reject);
                        });
                    },

                    getFishes: function() {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT * FROM Fish'
                            ].join(' '))
                            .then(function(data) {
                                fulfill(createObject(data));
                            }, reject);
                        });
                    },

                    getFish: function(id) {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT * FROM Fish',
                                'WHERE id = ?'
                            ].join(' '), [id])
                            .then(function(data) {
                                fulfill(createObject(data)[0]);
                            }, reject);
                        });
                    },

                    getTechniques: function() {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT * FROM Technique'
                            ].join(' '))
                            .then(function(data) {
                                fulfill(createObject(data));
                            }, reject);
                        });
                    },
                    getTechnique: function(id) {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT * FROM Technique',
                                'WHERE ID = ?'
                            ].join(' '), [id])
                            .then(function(data) {
                                fulfill(createObject(data)[0]);
                            }, reject);
                        });
                    },
                    getOrganization: function(id) {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT * FROM Organization',
                                'WHERE ID = ?'
                            ].join(' '), [id])
                            .then(function(data) {
                                fulfill(createObject(data)[0]);
                            }, reject);
                        });
                    },
                    getUserInfo: function() {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT *',
                                'FROM User_Info'
                            ].join(' '))
                            .then(function(user) {
                                fulfill(createObject(user)[0]);
                            }, reject);
                        });
                    },
                    getUserNumbers: function() {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT *',
                                'FROM User_Number'
                            ].join(' '))
                            .then(function(data) {
                                fulfill(createObject(data));
                            }, reject);
                        });
                    },

                    getPois: function(id) {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT *',
                                'FROM Poi',
                                'WHERE orgid = ?'
                            ].join(' '), [id])
                            .then(function(data) {
                                fulfill(createObject(data));
                            }, reject);
                        });
                    },

                    getPoiTypes: function() {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT *',
                                'FROM Poi_Type'
                            ].join(' '))
                            .then(function(data) {
                                fulfill(createObject(data));
                            }, reject);
                        });
                    },

                    getPolygons: function(id) {
                        return $q(function(fulfill, reject) {
                            $cordovaSQLite.execute(db, [
                                'SELECT *',
                                'FROM Polygon',
                                'WHERE orgid = ?'
                            ].join(' '), [id])
                            .then(function(data) {
                                fulfill(createObject(data));
                            }, reject);
                        });
                    }
                };
            }
        ];
    });
})(window.angular);

angular.module('ifiske.filters', [])
.filter('onebr', function() {
    return function(input) {
        return input.replace(/(<br>\s*)+/g, '<br>');
    };
})
.filter('nobrs', function() {
    return function(input) {
        return input.replace(/(<br(\s*\/)*>)+/g, '');
    };
})
.filter('cleantables', function() {
    return function(input) {
        input = input.replace(/(<\/?table>)+/g, '');
        input = input.replace(/(<\/?tr>)+/g, '');
        input = input.replace(/(<\/?th>)+/g, '');
        input = input.replace(/(<(\/?)td.*?>)+?/g, '<$2p>');
        input = input.replace(/<p>\s*<\/p>/g, '');
        return input;
    };
});

(function(angular, undefined) {
    'use strict';

    angular.module('ifiske.update', ['ifiske.api', 'ifiske.db', 'ifiske.utils'])
    .provider('Update', function UpdateProvider() {

        this.$get = [
            'API',
            'DB',
            'localStorage',
            '$q',
            '$ionicLoading',
            'sessionData',
            function(API, DB, localStorage, $q, $ionicLoading, sessionData) {

                var LAST_UPDATE = 'last_update';

                var populate = function() {
                    return $q.all([
                        API.get_areas()
                        .then(function(data) {
                            var fishArr = [];
                            for (var key in data) {
                                var fishes = data[key].fish;
                                for (var fishKey in fishes) {
                                    fishArr.push({
                                        'ID': key + '_' + fishKey,
                                        fid: fishKey,
                                        aid: key,
                                        amount: fishes[fishKey][0],
                                        comment: fishes[fishKey][1]
                                    });
                                }
                            }
                            return $q.all([
                                DB.populateTable('Area', data),
                                DB.populateTable('Area_Fish', fishArr)
                            ])
                            .then(function() {
                                return 'Area';
                            }, function(err) {
                                console.warn(err);
                                return $q.reject(err);
                            });
                        }),
                        API.get_products()
                        .then(function(data) {
                            return DB.populateTable('Product', data)
                            .then(function() {
                                return 'Product';
                            }, function(err) {
                                console.warn(err);
                                return $q.reject(err);
                            });
                        }),
                        API.get_counties()
                        .then(function(data) {
                            return DB.populateTable('County', data)
                            .then(function() {
                                return 'County';
                            }, function(err) {
                                console.warn(err);
                                return $q.reject(err);
                            });
                        }),
                        API.get_municipalities()
                        .then(function(data) {
                            return DB.populateTable('Municipality', data)
                            .then(function() {
                                return 'Municipality';
                            }, function(err) {
                                console.warn(err);
                                return $q.reject(err);
                            });
                        }),
                        API.get_fishes()
                        .then(function(data) {
                            return DB.populateTable('Fish', data)
                            .then(function() {
                                return 'Fish';
                            }, function(err) {
                                console.warn(err);
                                return $q.reject(err);
                            });
                        }),
                        API.get_rules()
                        .then(function(data) {
                            return DB.populateTable('Rule', data)
                            .then(function() {
                                return 'Rule';
                            }, function(err) {
                                console.warn(err);
                                return $q.reject(err);
                            });
                        }),
                        API.get_techniques()
                        .then(function(data) {
                            return DB.populateTable('Technique', data)
                            .then(function() {
                                return 'Technique';
                            }, function(err) {
                                console.warn(err);
                                return $q.reject(err);
                            });
                        }),
                        API.get_organizations()
                        .then(function(data) {
                            return DB.populateTable('Organization', data)
                            .then(function() {
                                return 'Organization';
                            }, function(err) {
                                console.warn(err);
                                return $q.reject(err);
                            });
                        }),
                        API.get_map_pois()
                        .then(function(data) {
                            return DB.populateTable('Poi', data)
                            .then(function() {
                                return 'Poi';
                            }, function(err) {
                                console.warn(err);
                                return $q.reject(err);
                            });
                        }),
                        API.get_map_poi_types()
                        .then(function(data) {
                            return DB.populateTable('Poi_Type', data)
                            .then(function() {
                                return 'Poi_Type';
                            }, function(err) {
                                console.warn(err);
                                return $q.reject(err);
                            });
                        }),
                        API.get_map_polygons()
                        .then(function(data) {
                            return DB.populateTable('Polygon', data)
                            .then(function() {
                                return 'Polygon';
                            }, function(err) {
                                console.warn(err);
                                return $q.reject(err);
                            });
                        })
                    ]);
                };

                var populateUser = function() {
                    return $q.all([
                        API.user_products()
                        .then(function(data) {
                            console.log(data);
                            return DB.populateTable('User_Product', data)
                            .then(function() {
                                return 'User_Product';
                            }, function(err) {
                                console.log(err);
                                return $q.reject(err);
                            });
                        }),
                        API.user_info()
                        .then(function(data) {
                            var numbers = data.numbers;
                            var numArr = [];
                            for (var i = 0; i < numbers.length; ++i) {
                                numArr.push({'number': numbers[i]});
                            }
                            return $q.all([
                                DB.populateTable('User_Info', [data])
                                .then(function() {
                                    return 'User_Info';
                                }, function(err) {
                                    console.log(data);
                                    console.log(err);
                                    return $q.reject(err);
                                }),
                                DB.populateTable('User_Number', numArr)
                                .then(function() {
                                    return 'User_Numbers';
                                }, function(err) {
                                    console.log(err);
                                    return $q.reject(err);
                                }),
                            ]);
                        })
                    ]);
                };

                var cleanUser = function() {
                    return $q.all([
                        DB.cleanTable('User_Product'),
                        DB.cleanTable('User_Number'),
                        DB.cleanTable('User_Info')
                    ])
                    .then(function() {
                        console.log('Removed user info from database');
                    }, function(err) {
                        console.log('Could not remove user data from database!', err);
                    });
                };

                var updateFunc = function(forced) {
                    $ionicLoading.show();

                    var currentTime = Date.now();

                    var lastUpdate = 0;
                    if (!forced) {
                        lastUpdate = localStorage.get(LAST_UPDATE);
                    }

                    var aWeek = 1000 * 3600 * 24 * 7;
                    if (currentTime - lastUpdate > aWeek) {
                        return $q.all([
                            DB.init()
                            .then(function() {
                                console.log('Initialized DB system');
                                if (sessionData.token) {
                                    return $q.all([
                                        populateUser(),
                                        populate()
                                    ]);
                                } else {
                                    return populate();
                                }
                            })

                            .then(function(stuff) {
                                console.log('Populated:', stuff);
                                localStorage.set(LAST_UPDATE, currentTime);
                                $ionicLoading.hide();
                            }, function(err) {
                                if (err.error_code === 7) {
                                    // Authentication failure
                                    // TODO: Show to user
                                    cleanUser();
                                    API.user_logout();
                                    $ionicLoading.hide();
                                } else {
                                    console.warn('Got an error, will try to recreate all tables:', err);

                                    return DB.clean()
                                    .then(function() {
                                        return DB.init();
                                    })

                                    .then(function() {
                                        return populate();
                                    })

                                    .then(function(stuff) {
                                        console.log('Populated:', stuff);
                                        localStorage.set(LAST_UPDATE, currentTime);
                                        $ionicLoading.hide();
                                    }, function(err) {
                                        console.log('Still error, handle it!', err);
                                        $ionicLoading.hide();
                                    });
                                }
                            }),
                            API.get_terms_of_service()
                            .then(function(data) {
                                localStorage.set('tos', data);
                            }),
                            API.get_sms_terms()
                            .then(function(terms) {
                                localStorage.set('sms_terms', terms);
                            }),
                            API.get_contact_info()
                            .then(function(data) {
                                localStorage.set('contactInfo', data);
                            }),
                            API.get_mapbox_api()
                            .then(function(data) {
                                localStorage.set('mapbox_api', data);
                            })
                        ]);

                    } else if (sessionData.token) {
                        return DB.init()
                        .then(function() {
                            console.log('Initialized DB system');
                            if (sessionData.token) {
                                return populateUser()
                                .catch(function(err) {
                                    console.error(err);
                                }).finally(function() {
                                    $ionicLoading.hide();
                                });
                            }
                            $ionicLoading.hide();
                        });
                    } else {
                        console.log('no_update');
                        $ionicLoading.hide();
                        return $q.when('No update');
                    }
                };

                return {
                    update: function() {
                        return updateFunc();
                    },

                    forcedUpdate: function() {
                        return updateFunc(true);
                    },

                    user_logout: function() {
                        cleanUser();
                        return API.user_logout();
                    },
                    user_login: function(username, password) {
                        return API.user_login(username, password)
                        .then(function() {
                            updateFunc();
                        });
                    },
                    last_update: function() {
                        return localStorage.get(LAST_UPDATE);
                    }
                };
            }
        ];
    });
})(window.angular);

angular.module('ifiske.utils', [])

.factory('localStorage', ['$window', function($window) {
    return {
        set: function(key, value) {
            $window.localStorage.setItem(key, value);
        },
        get: function(key) {
            return $window.localStorage.getItem(key);
        },
        remove: function(key) {
            $window.localStorage.removeItem(key);
        }
    };
}])
.service('sessionData', ['localStorage', function(localStorage) {
    this.token = localStorage.get('session');

    this.setToken = function(t) {
        localStorage.set('session', t);
        this.token = t;
        console.log('token set');
    };
    this.deleteToken = function() {
        localStorage.remove('session');
        this.token = null;
        console.log('token unset');
    };
}])
.factory('Licenses', function() {
    return {
        get: function() {
            return [
                {
                    "title": "Ionic Framework",
                    "text": "Copyright 2015-present Drifty Co.\nhttp://drifty.com/\n\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
                },
                {
                    "title": "uk.co.whiteoctober.cordova.appversion",
                    "text": "\nCopyright (c) 2013 White October\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
                },
                {
                    "title":"com.cordova.plugins.sms",
                    "text":"\nThe MIT License (MIT)\n\nCopyright (c) 2014 aharris88\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the 'Software'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
                },
                {
                    "title": "org.apache.cordova.statusbar",
                    "text": "\n\n Apache License\n Version 2.0, January 2004\n http://www.apache.org/licenses/\n\n TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n 1. Definitions.\n\n 'License' shall mean the terms and conditions for use, reproduction,\n and distribution as defined by Sections 1 through 9 of this document.\n\n 'Licensor' shall mean the copyright owner or entity authorized by\n the copyright owner that is granting the License.\n\n 'Legal Entity' shall mean the union of the acting entity and all\n other entities that control, are controlled by, or are under common\n control with that entity. For the purposes of this definition,\n 'control' means (i) the power, direct or indirect, to cause the\n direction or management of such entity, whether by contract or\n otherwise, or (ii) ownership of fifty percent (50%) or more of the\n outstanding shares, or (iii) beneficial ownership of such entity.\n\n 'You' (or 'Your') shall mean an individual or Legal Entity\n exercising permissions granted by this License.\n\n 'Source' form shall mean the preferred form for making modifications,\n including but not limited to software source code, documentation\n source, and configuration files.\n\n 'Object' form shall mean any form resulting from mechanical\n transformation or translation of a Source form, including but\n not limited to compiled object code, generated documentation,\n and conversions to other media types.\n\n 'Work' shall mean the work of authorship, whether in Source or\n Object form, made available under the License, as indicated by a\n copyright notice that is included in or attached to the work\n (an example is provided in the Appendix below).\n\n 'Derivative Works' shall mean any work, whether in Source or Object\n form, that is based on (or derived from) the Work and for which the\n editorial revisions, annotations, elaborations, or other modifications\n represent, as a whole, an original work of authorship. For the purposes\n of this License, Derivative Works shall not include works that remain\n separable from, or merely link (or bind by name) to the interfaces of,\n the Work and Derivative Works thereof.\n\n 'Contribution' shall mean any work of authorship, including\n the original version of the Work and any modifications or additions\n to that Work or Derivative Works thereof, that is intentionally\n submitted to Licensor for inclusion in the Work by the copyright owner\n or by an individual or Legal Entity authorized to submit on behalf of\n the copyright owner. For the purposes of this definition, 'submitted'\n means any form of electronic, verbal, or written communication sent\n to the Licensor or its representatives, including but not limited to\n communication on electronic mailing lists, source code control systems,\n and issue tracking systems that are managed by, or on behalf of, the\n Licensor for the purpose of discussing and improving the Work, but\n excluding communication that is conspicuously marked or otherwise\n designated in writing by the copyright owner as 'Not a Contribution.'\n\n 'Contributor' shall mean Licensor and any individual or Legal Entity\n on behalf of whom a Contribution has been received by Licensor and\n subsequently incorporated within the Work.\n\n 2. Grant of Copyright License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n copyright license to reproduce, prepare Derivative Works of,\n publicly display, publicly perform, sublicense, and distribute the\n Work and such Derivative Works in Source or Object form.\n\n 3. Grant of Patent License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n (except as stated in this section) patent license to make, have made,\n use, offer to sell, sell, import, and otherwise transfer the Work,\n where such license applies only to those patent claims licensable\n by such Contributor that are necessarily infringed by their\n Contribution(s) alone or by combination of their Contribution(s)\n with the Work to which such Contribution(s) was submitted. If You\n institute patent litigation against any entity (including a\n cross-claim or counterclaim in a lawsuit) alleging that the Work\n or a Contribution incorporated within the Work constitutes direct\n or contributory patent infringement, then any patent licenses\n granted to You under this License for that Work shall terminate\n as of the date such litigation is filed.\n\n 4. Redistribution. You may reproduce and distribute copies of the\n Work or Derivative Works thereof in any medium, with or without\n modifications, and in Source or Object form, provided that You\n meet the following conditions:\n\n (a) You must give any other recipients of the Work or\n Derivative Works a copy of this License; and\n\n (b) You must cause any modified files to carry prominent notices\n stating that You changed the files; and\n\n (c) You must retain, in the Source form of any Derivative Works\n that You distribute, all copyright, patent, trademark, and\n attribution notices from the Source form of the Work,\n excluding those notices that do not pertain to any part of\n the Derivative Works; and\n\n (d) If the Work includes a 'NOTICE' text file as part of its\n distribution, then any Derivative Works that You distribute must\n include a readable copy of the attribution notices contained\n within such NOTICE file, excluding those notices that do not\n pertain to any part of the Derivative Works, in at least one\n of the following places: within a NOTICE text file distributed\n as part of the Derivative Works; within the Source form or\n documentation, if provided along with the Derivative Works; or,\n within a display generated by the Derivative Works, if and\n wherever such third-party notices normally appear. The contents\n of the NOTICE file are for informational purposes only and\n do not modify the License. You may add Your own attribution\n notices within Derivative Works that You distribute, alongside\n or as an addendum to the NOTICE text from the Work, provided\n that such additional attribution notices cannot be construed\n as modifying the License.\n\n You may add Your own copyright statement to Your modifications and\n may provide additional or different license terms and conditions\n for use, reproduction, or distribution of Your modifications, or\n for any such Derivative Works as a whole, provided Your use,\n reproduction, and distribution of the Work otherwise complies with\n the conditions stated in this License.\n\n 5. Submission of Contributions. Unless You explicitly state otherwise,\n any Contribution intentionally submitted for inclusion in the Work\n by You to the Licensor shall be under the terms and conditions of\n this License, without any additional terms or conditions.\n Notwithstanding the above, nothing herein shall supersede or modify\n the terms of any separate license agreement you may have executed\n with Licensor regarding such Contributions.\n\n 6. Trademarks. This License does not grant permission to use the trade\n names, trademarks, service marks, or product names of the Licensor,\n except as required for reasonable and customary use in describing the\n origin of the Work and reproducing the content of the NOTICE file.\n\n 7. Disclaimer of Warranty. Unless required by applicable law or\n agreed to in writing, Licensor provides the Work (and each\n Contributor provides its Contributions) on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n implied, including, without limitation, any warranties or conditions\n of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n PARTICULAR PURPOSE. You are solely responsible for determining the\n appropriateness of using or redistributing the Work and assume any\n risks associated with Your exercise of permissions under this License.\n\n 8. Limitation of Liability. In no event and under no legal theory,\n whether in tort (including negligence), contract, or otherwise,\n unless required by applicable law (such as deliberate and grossly\n negligent acts) or agreed to in writing, shall any Contributor be\n liable to You for damages, including any direct, indirect, special,\n incidental, or consequential damages of any character arising as a\n result of this License or out of the use or inability to use the\n Work (including but not limited to damages for loss of goodwill,\n work stoppage, computer failure or malfunction, or any and all\n other commercial damages or losses), even if such Contributor\n has been advised of the possibility of such damages.\n\n 9. Accepting Warranty or Additional Liability. While redistributing\n the Work or Derivative Works thereof, You may choose to offer,\n and charge a fee for, acceptance of support, warranty, indemnity,\n or other liability obligations and/or rights consistent with this\n License. However, in accepting such obligations, You may act only\n on Your own behalf and on Your sole responsibility, not on behalf\n of any other Contributor, and only if You agree to indemnify,\n defend, and hold each Contributor harmless for any liability\n incurred by, or claims asserted against, such Contributor by reason\n of your accepting any such warranty or additional liability.\n\n END OF TERMS AND CONDITIONS\n\n APPENDIX: How to apply the Apache License to your work.\n\n To apply the Apache License to your work, attach the following\n boilerplate notice, with the fields enclosed by brackets '[]'\n replaced with your own identifying information. (Don't include\n the brackets!) The text should be enclosed in the appropriate\n comment syntax for the file format. We also recommend that a\n file or class name and description of purpose be included on the\n same 'printed page' as the copyright notice for easier\n identification within third-party archives.\n\n Copyright [yyyy] [name of copyright owner]\n\n Licensed under the Apache License, Version 2.0 (the 'License');\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
                },
                {
                    "title": "org.apache.cordova.geolocation",
                    "text": "\n\n Apache License\n Version 2.0, January 2004\n http://www.apache.org/licenses/\n\n TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n 1. Definitions.\n\n 'License' shall mean the terms and conditions for use, reproduction,\n and distribution as defined by Sections 1 through 9 of this document.\n\n 'Licensor' shall mean the copyright owner or entity authorized by\n the copyright owner that is granting the License.\n\n 'Legal Entity' shall mean the union of the acting entity and all\n other entities that control, are controlled by, or are under common\n control with that entity. For the purposes of this definition,\n 'control' means (i) the power, direct or indirect, to cause the\n direction or management of such entity, whether by contract or\n otherwise, or (ii) ownership of fifty percent (50%) or more of the\n outstanding shares, or (iii) beneficial ownership of such entity.\n\n 'You' (or 'Your') shall mean an individual or Legal Entity\n exercising permissions granted by this License.\n\n 'Source' form shall mean the preferred form for making modifications,\n including but not limited to software source code, documentation\n source, and configuration files.\n\n 'Object' form shall mean any form resulting from mechanical\n transformation or translation of a Source form, including but\n not limited to compiled object code, generated documentation,\n and conversions to other media types.\n\n 'Work' shall mean the work of authorship, whether in Source or\n Object form, made available under the License, as indicated by a\n copyright notice that is included in or attached to the work\n (an example is provided in the Appendix below).\n\n 'Derivative Works' shall mean any work, whether in Source or Object\n form, that is based on (or derived from) the Work and for which the\n editorial revisions, annotations, elaborations, or other modifications\n represent, as a whole, an original work of authorship. For the purposes\n of this License, Derivative Works shall not include works that remain\n separable from, or merely link (or bind by name) to the interfaces of,\n the Work and Derivative Works thereof.\n\n 'Contribution' shall mean any work of authorship, including\n the original version of the Work and any modifications or additions\n to that Work or Derivative Works thereof, that is intentionally\n submitted to Licensor for inclusion in the Work by the copyright owner\n or by an individual or Legal Entity authorized to submit on behalf of\n the copyright owner. For the purposes of this definition, 'submitted'\n means any form of electronic, verbal, or written communication sent\n to the Licensor or its representatives, including but not limited to\n communication on electronic mailing lists, source code control systems,\n and issue tracking systems that are managed by, or on behalf of, the\n Licensor for the purpose of discussing and improving the Work, but\n excluding communication that is conspicuously marked or otherwise\n designated in writing by the copyright owner as 'Not a Contribution.'\n\n 'Contributor' shall mean Licensor and any individual or Legal Entity\n on behalf of whom a Contribution has been received by Licensor and\n subsequently incorporated within the Work.\n\n 2. Grant of Copyright License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n copyright license to reproduce, prepare Derivative Works of,\n publicly display, publicly perform, sublicense, and distribute the\n Work and such Derivative Works in Source or Object form.\n\n 3. Grant of Patent License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n (except as stated in this section) patent license to make, have made,\n use, offer to sell, sell, import, and otherwise transfer the Work,\n where such license applies only to those patent claims licensable\n by such Contributor that are necessarily infringed by their\n Contribution(s) alone or by combination of their Contribution(s)\n with the Work to which such Contribution(s) was submitted. If You\n institute patent litigation against any entity (including a\n cross-claim or counterclaim in a lawsuit) alleging that the Work\n or a Contribution incorporated within the Work constitutes direct\n or contributory patent infringement, then any patent licenses\n granted to You under this License for that Work shall terminate\n as of the date such litigation is filed.\n\n 4. Redistribution. You may reproduce and distribute copies of the\n Work or Derivative Works thereof in any medium, with or without\n modifications, and in Source or Object form, provided that You\n meet the following conditions:\n\n (a) You must give any other recipients of the Work or\n Derivative Works a copy of this License; and\n\n (b) You must cause any modified files to carry prominent notices\n stating that You changed the files; and\n\n (c) You must retain, in the Source form of any Derivative Works\n that You distribute, all copyright, patent, trademark, and\n attribution notices from the Source form of the Work,\n excluding those notices that do not pertain to any part of\n the Derivative Works; and\n\n (d) If the Work includes a 'NOTICE' text file as part of its\n distribution, then any Derivative Works that You distribute must\n include a readable copy of the attribution notices contained\n within such NOTICE file, excluding those notices that do not\n pertain to any part of the Derivative Works, in at least one\n of the following places: within a NOTICE text file distributed\n as part of the Derivative Works; within the Source form or\n documentation, if provided along with the Derivative Works; or,\n within a display generated by the Derivative Works, if and\n wherever such third-party notices normally appear. The contents\n of the NOTICE file are for informational purposes only and\n do not modify the License. You may add Your own attribution\n notices within Derivative Works that You distribute, alongside\n or as an addendum to the NOTICE text from the Work, provided\n that such additional attribution notices cannot be construed\n as modifying the License.\n\n You may add Your own copyright statement to Your modifications and\n may provide additional or different license terms and conditions\n for use, reproduction, or distribution of Your modifications, or\n for any such Derivative Works as a whole, provided Your use,\n reproduction, and distribution of the Work otherwise complies with\n the conditions stated in this License.\n\n 5. Submission of Contributions. Unless You explicitly state otherwise,\n any Contribution intentionally submitted for inclusion in the Work\n by You to the Licensor shall be under the terms and conditions of\n this License, without any additional terms or conditions.\n Notwithstanding the above, nothing herein shall supersede or modify\n the terms of any separate license agreement you may have executed\n with Licensor regarding such Contributions.\n\n 6. Trademarks. This License does not grant permission to use the trade\n names, trademarks, service marks, or product names of the Licensor,\n except as required for reasonable and customary use in describing the\n origin of the Work and reproducing the content of the NOTICE file.\n\n 7. Disclaimer of Warranty. Unless required by applicable law or\n agreed to in writing, Licensor provides the Work (and each\n Contributor provides its Contributions) on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n implied, including, without limitation, any warranties or conditions\n of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n PARTICULAR PURPOSE. You are solely responsible for determining the\n appropriateness of using or redistributing the Work and assume any\n risks associated with Your exercise of permissions under this License.\n\n 8. Limitation of Liability. In no event and under no legal theory,\n whether in tort (including negligence), contract, or otherwise,\n unless required by applicable law (such as deliberate and grossly\n negligent acts) or agreed to in writing, shall any Contributor be\n liable to You for damages, including any direct, indirect, special,\n incidental, or consequential damages of any character arising as a\n result of this License or out of the use or inability to use the\n Work (including but not limited to damages for loss of goodwill,\n work stoppage, computer failure or malfunction, or any and all\n other commercial damages or losses), even if such Contributor\n has been advised of the possibility of such damages.\n\n 9. Accepting Warranty or Additional Liability. While redistributing\n the Work or Derivative Works thereof, You may choose to offer,\n and charge a fee for, acceptance of support, warranty, indemnity,\n or other liability obligations and/or rights consistent with this\n License. However, in accepting such obligations, You may act only\n on Your own behalf and on Your sole responsibility, not on behalf\n of any other Contributor, and only if You agree to indemnify,\n defend, and hold each Contributor harmless for any liability\n incurred by, or claims asserted against, such Contributor by reason\n of your accepting any such warranty or additional liability.\n\n END OF TERMS AND CONDITIONS\n\n APPENDIX: How to apply the Apache License to your work.\n\n To apply the Apache License to your work, attach the following\n boilerplate notice, with the fields enclosed by brackets '[]'\n replaced with your own identifying information. (Don't include\n the brackets!) The text should be enclosed in the appropriate\n comment syntax for the file format. We also recommend that a\n file or class name and description of purpose be included on the\n same 'printed page' as the copyright notice for easier\n identification within third-party archives.\n\n Copyright [yyyy] [name of copyright owner]\n\n Licensed under the Apache License, Version 2.0 (the 'License');\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
                },
                {
                    "title": "org.apache.cordova.inappbrowser",
                    "text": "\n\n Apache License\n Version 2.0, January 2004\n http://www.apache.org/licenses/\n\n TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n 1. Definitions.\n\n 'License' shall mean the terms and conditions for use, reproduction,\n and distribution as defined by Sections 1 through 9 of this document.\n\n 'Licensor' shall mean the copyright owner or entity authorized by\n the copyright owner that is granting the License.\n\n 'Legal Entity' shall mean the union of the acting entity and all\n other entities that control, are controlled by, or are under common\n control with that entity. For the purposes of this definition,\n 'control' means (i) the power, direct or indirect, to cause the\n direction or management of such entity, whether by contract or\n otherwise, or (ii) ownership of fifty percent (50%) or more of the\n outstanding shares, or (iii) beneficial ownership of such entity.\n\n 'You' (or 'Your') shall mean an individual or Legal Entity\n exercising permissions granted by this License.\n\n 'Source' form shall mean the preferred form for making modifications,\n including but not limited to software source code, documentation\n source, and configuration files.\n\n 'Object' form shall mean any form resulting from mechanical\n transformation or translation of a Source form, including but\n not limited to compiled object code, generated documentation,\n and conversions to other media types.\n\n 'Work' shall mean the work of authorship, whether in Source or\n Object form, made available under the License, as indicated by a\n copyright notice that is included in or attached to the work\n (an example is provided in the Appendix below).\n\n 'Derivative Works' shall mean any work, whether in Source or Object\n form, that is based on (or derived from) the Work and for which the\n editorial revisions, annotations, elaborations, or other modifications\n represent, as a whole, an original work of authorship. For the purposes\n of this License, Derivative Works shall not include works that remain\n separable from, or merely link (or bind by name) to the interfaces of,\n the Work and Derivative Works thereof.\n\n 'Contribution' shall mean any work of authorship, including\n the original version of the Work and any modifications or additions\n to that Work or Derivative Works thereof, that is intentionally\n submitted to Licensor for inclusion in the Work by the copyright owner\n or by an individual or Legal Entity authorized to submit on behalf of\n the copyright owner. For the purposes of this definition, 'submitted'\n means any form of electronic, verbal, or written communication sent\n to the Licensor or its representatives, including but not limited to\n communication on electronic mailing lists, source code control systems,\n and issue tracking systems that are managed by, or on behalf of, the\n Licensor for the purpose of discussing and improving the Work, but\n excluding communication that is conspicuously marked or otherwise\n designated in writing by the copyright owner as 'Not a Contribution.'\n\n 'Contributor' shall mean Licensor and any individual or Legal Entity\n on behalf of whom a Contribution has been received by Licensor and\n subsequently incorporated within the Work.\n\n 2. Grant of Copyright License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n copyright license to reproduce, prepare Derivative Works of,\n publicly display, publicly perform, sublicense, and distribute the\n Work and such Derivative Works in Source or Object form.\n\n 3. Grant of Patent License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n (except as stated in this section) patent license to make, have made,\n use, offer to sell, sell, import, and otherwise transfer the Work,\n where such license applies only to those patent claims licensable\n by such Contributor that are necessarily infringed by their\n Contribution(s) alone or by combination of their Contribution(s)\n with the Work to which such Contribution(s) was submitted. If You\n institute patent litigation against any entity (including a\n cross-claim or counterclaim in a lawsuit) alleging that the Work\n or a Contribution incorporated within the Work constitutes direct\n or contributory patent infringement, then any patent licenses\n granted to You under this License for that Work shall terminate\n as of the date such litigation is filed.\n\n 4. Redistribution. You may reproduce and distribute copies of the\n Work or Derivative Works thereof in any medium, with or without\n modifications, and in Source or Object form, provided that You\n meet the following conditions:\n\n (a) You must give any other recipients of the Work or\n Derivative Works a copy of this License; and\n\n (b) You must cause any modified files to carry prominent notices\n stating that You changed the files; and\n\n (c) You must retain, in the Source form of any Derivative Works\n that You distribute, all copyright, patent, trademark, and\n attribution notices from the Source form of the Work,\n excluding those notices that do not pertain to any part of\n the Derivative Works; and\n\n (d) If the Work includes a 'NOTICE' text file as part of its\n distribution, then any Derivative Works that You distribute must\n include a readable copy of the attribution notices contained\n within such NOTICE file, excluding those notices that do not\n pertain to any part of the Derivative Works, in at least one\n of the following places: within a NOTICE text file distributed\n as part of the Derivative Works; within the Source form or\n documentation, if provided along with the Derivative Works; or,\n within a display generated by the Derivative Works, if and\n wherever such third-party notices normally appear. The contents\n of the NOTICE file are for informational purposes only and\n do not modify the License. You may add Your own attribution\n notices within Derivative Works that You distribute, alongside\n or as an addendum to the NOTICE text from the Work, provided\n that such additional attribution notices cannot be construed\n as modifying the License.\n\n You may add Your own copyright statement to Your modifications and\n may provide additional or different license terms and conditions\n for use, reproduction, or distribution of Your modifications, or\n for any such Derivative Works as a whole, provided Your use,\n reproduction, and distribution of the Work otherwise complies with\n the conditions stated in this License.\n\n 5. Submission of Contributions. Unless You explicitly state otherwise,\n any Contribution intentionally submitted for inclusion in the Work\n by You to the Licensor shall be under the terms and conditions of\n this License, without any additional terms or conditions.\n Notwithstanding the above, nothing herein shall supersede or modify\n the terms of any separate license agreement you may have executed\n with Licensor regarding such Contributions.\n\n 6. Trademarks. This License does not grant permission to use the trade\n names, trademarks, service marks, or product names of the Licensor,\n except as required for reasonable and customary use in describing the\n origin of the Work and reproducing the content of the NOTICE file.\n\n 7. Disclaimer of Warranty. Unless required by applicable law or\n agreed to in writing, Licensor provides the Work (and each\n Contributor provides its Contributions) on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n implied, including, without limitation, any warranties or conditions\n of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n PARTICULAR PURPOSE. You are solely responsible for determining the\n appropriateness of using or redistributing the Work and assume any\n risks associated with Your exercise of permissions under this License.\n\n 8. Limitation of Liability. In no event and under no legal theory,\n whether in tort (including negligence), contract, or otherwise,\n unless required by applicable law (such as deliberate and grossly\n negligent acts) or agreed to in writing, shall any Contributor be\n liable to You for damages, including any direct, indirect, special,\n incidental, or consequential damages of any character arising as a\n result of this License or out of the use or inability to use the\n Work (including but not limited to damages for loss of goodwill,\n work stoppage, computer failure or malfunction, or any and all\n other commercial damages or losses), even if such Contributor\n has been advised of the possibility of such damages.\n\n 9. Accepting Warranty or Additional Liability. While redistributing\n the Work or Derivative Works thereof, You may choose to offer,\n and charge a fee for, acceptance of support, warranty, indemnity,\n or other liability obligations and/or rights consistent with this\n License. However, in accepting such obligations, You may act only\n on Your own behalf and on Your sole responsibility, not on behalf\n of any other Contributor, and only if You agree to indemnify,\n defend, and hold each Contributor harmless for any liability\n incurred by, or claims asserted against, such Contributor by reason\n of your accepting any such warranty or additional liability.\n\n END OF TERMS AND CONDITIONS\n\n APPENDIX: How to apply the Apache License to your work.\n\n To apply the Apache License to your work, attach the following\n boilerplate notice, with the fields enclosed by brackets '[]'\n replaced with your own identifying information. (Don't include\n the brackets!) The text should be enclosed in the appropriate\n comment syntax for the file format. We also recommend that a\n file or class name and description of purpose be included on the\n same 'printed page' as the copyright notice for easier\n identification within third-party archives.\n\n Copyright [yyyy] [name of copyright owner]\n\n Licensed under the Apache License, Version 2.0 (the 'License');\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
                },
                {
                    "title": "org.apache.cordova.device-orientation",
                    "text": "\n\n Apache License\n Version 2.0, January 2004\n http://www.apache.org/licenses/\n\n TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n 1. Definitions.\n\n 'License' shall mean the terms and conditions for use, reproduction,\n and distribution as defined by Sections 1 through 9 of this document.\n\n 'Licensor' shall mean the copyright owner or entity authorized by\n the copyright owner that is granting the License.\n\n 'Legal Entity' shall mean the union of the acting entity and all\n other entities that control, are controlled by, or are under common\n control with that entity. For the purposes of this definition,\n 'control' means (i) the power, direct or indirect, to cause the\n direction or management of such entity, whether by contract or\n otherwise, or (ii) ownership of fifty percent (50%) or more of the\n outstanding shares, or (iii) beneficial ownership of such entity.\n\n 'You' (or 'Your') shall mean an individual or Legal Entity\n exercising permissions granted by this License.\n\n 'Source' form shall mean the preferred form for making modifications,\n including but not limited to software source code, documentation\n source, and configuration files.\n\n 'Object' form shall mean any form resulting from mechanical\n transformation or translation of a Source form, including but\n not limited to compiled object code, generated documentation,\n and conversions to other media types.\n\n 'Work' shall mean the work of authorship, whether in Source or\n Object form, made available under the License, as indicated by a\n copyright notice that is included in or attached to the work\n (an example is provided in the Appendix below).\n\n 'Derivative Works' shall mean any work, whether in Source or Object\n form, that is based on (or derived from) the Work and for which the\n editorial revisions, annotations, elaborations, or other modifications\n represent, as a whole, an original work of authorship. For the purposes\n of this License, Derivative Works shall not include works that remain\n separable from, or merely link (or bind by name) to the interfaces of,\n the Work and Derivative Works thereof.\n\n 'Contribution' shall mean any work of authorship, including\n the original version of the Work and any modifications or additions\n to that Work or Derivative Works thereof, that is intentionally\n submitted to Licensor for inclusion in the Work by the copyright owner\n or by an individual or Legal Entity authorized to submit on behalf of\n the copyright owner. For the purposes of this definition, 'submitted'\n means any form of electronic, verbal, or written communication sent\n to the Licensor or its representatives, including but not limited to\n communication on electronic mailing lists, source code control systems,\n and issue tracking systems that are managed by, or on behalf of, the\n Licensor for the purpose of discussing and improving the Work, but\n excluding communication that is conspicuously marked or otherwise\n designated in writing by the copyright owner as 'Not a Contribution.'\n\n 'Contributor' shall mean Licensor and any individual or Legal Entity\n on behalf of whom a Contribution has been received by Licensor and\n subsequently incorporated within the Work.\n\n 2. Grant of Copyright License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n copyright license to reproduce, prepare Derivative Works of,\n publicly display, publicly perform, sublicense, and distribute the\n Work and such Derivative Works in Source or Object form.\n\n 3. Grant of Patent License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n (except as stated in this section) patent license to make, have made,\n use, offer to sell, sell, import, and otherwise transfer the Work,\n where such license applies only to those patent claims licensable\n by such Contributor that are necessarily infringed by their\n Contribution(s) alone or by combination of their Contribution(s)\n with the Work to which such Contribution(s) was submitted. If You\n institute patent litigation against any entity (including a\n cross-claim or counterclaim in a lawsuit) alleging that the Work\n or a Contribution incorporated within the Work constitutes direct\n or contributory patent infringement, then any patent licenses\n granted to You under this License for that Work shall terminate\n as of the date such litigation is filed.\n\n 4. Redistribution. You may reproduce and distribute copies of the\n Work or Derivative Works thereof in any medium, with or without\n modifications, and in Source or Object form, provided that You\n meet the following conditions:\n\n (a) You must give any other recipients of the Work or\n Derivative Works a copy of this License; and\n\n (b) You must cause any modified files to carry prominent notices\n stating that You changed the files; and\n\n (c) You must retain, in the Source form of any Derivative Works\n that You distribute, all copyright, patent, trademark, and\n attribution notices from the Source form of the Work,\n excluding those notices that do not pertain to any part of\n the Derivative Works; and\n\n (d) If the Work includes a 'NOTICE' text file as part of its\n distribution, then any Derivative Works that You distribute must\n include a readable copy of the attribution notices contained\n within such NOTICE file, excluding those notices that do not\n pertain to any part of the Derivative Works, in at least one\n of the following places: within a NOTICE text file distributed\n as part of the Derivative Works; within the Source form or\n documentation, if provided along with the Derivative Works; or,\n within a display generated by the Derivative Works, if and\n wherever such third-party notices normally appear. The contents\n of the NOTICE file are for informational purposes only and\n do not modify the License. You may add Your own attribution\n notices within Derivative Works that You distribute, alongside\n or as an addendum to the NOTICE text from the Work, provided\n that such additional attribution notices cannot be construed\n as modifying the License.\n\n You may add Your own copyright statement to Your modifications and\n may provide additional or different license terms and conditions\n for use, reproduction, or distribution of Your modifications, or\n for any such Derivative Works as a whole, provided Your use,\n reproduction, and distribution of the Work otherwise complies with\n the conditions stated in this License.\n\n 5. Submission of Contributions. Unless You explicitly state otherwise,\n any Contribution intentionally submitted for inclusion in the Work\n by You to the Licensor shall be under the terms and conditions of\n this License, without any additional terms or conditions.\n Notwithstanding the above, nothing herein shall supersede or modify\n the terms of any separate license agreement you may have executed\n with Licensor regarding such Contributions.\n\n 6. Trademarks. This License does not grant permission to use the trade\n names, trademarks, service marks, or product names of the Licensor,\n except as required for reasonable and customary use in describing the\n origin of the Work and reproducing the content of the NOTICE file.\n\n 7. Disclaimer of Warranty. Unless required by applicable law or\n agreed to in writing, Licensor provides the Work (and each\n Contributor provides its Contributions) on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n implied, including, without limitation, any warranties or conditions\n of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n PARTICULAR PURPOSE. You are solely responsible for determining the\n appropriateness of using or redistributing the Work and assume any\n risks associated with Your exercise of permissions under this License.\n\n 8. Limitation of Liability. In no event and under no legal theory,\n whether in tort (including negligence), contract, or otherwise,\n unless required by applicable law (such as deliberate and grossly\n negligent acts) or agreed to in writing, shall any Contributor be\n liable to You for damages, including any direct, indirect, special,\n incidental, or consequential damages of any character arising as a\n result of this License or out of the use or inability to use the\n Work (including but not limited to damages for loss of goodwill,\n work stoppage, computer failure or malfunction, or any and all\n other commercial damages or losses), even if such Contributor\n has been advised of the possibility of such damages.\n\n 9. Accepting Warranty or Additional Liability. While redistributing\n the Work or Derivative Works thereof, You may choose to offer,\n and charge a fee for, acceptance of support, warranty, indemnity,\n or other liability obligations and/or rights consistent with this\n License. However, in accepting such obligations, You may act only\n on Your own behalf and on Your sole responsibility, not on behalf\n of any other Contributor, and only if You agree to indemnify,\n defend, and hold each Contributor harmless for any liability\n incurred by, or claims asserted against, such Contributor by reason\n of your accepting any such warranty or additional liability.\n\n END OF TERMS AND CONDITIONS\n\n APPENDIX: How to apply the Apache License to your work.\n\n To apply the Apache License to your work, attach the following\n boilerplate notice, with the fields enclosed by brackets '[]'\n replaced with your own identifying information. (Don't include\n the brackets!) The text should be enclosed in the appropriate\n comment syntax for the file format. We also recommend that a\n file or class name and description of purpose be included on the\n same 'printed page' as the copyright notice for easier\n identification within third-party archives.\n\n Copyright [yyyy] [name of copyright owner]\n\n Licensed under the Apache License, Version 2.0 (the 'License');\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
                },
                {
                    "title": "com.ionic.keyboard",
                    "text": "\n\n Apache License\n Version 2.0, January 2004\n http://www.apache.org/licenses/\n\n TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n 1. Definitions.\n\n 'License' shall mean the terms and conditions for use, reproduction,\n and distribution as defined by Sections 1 through 9 of this document.\n\n 'Licensor' shall mean the copyright owner or entity authorized by\n the copyright owner that is granting the License.\n\n 'Legal Entity' shall mean the union of the acting entity and all\n other entities that control, are controlled by, or are under common\n control with that entity. For the purposes of this definition,\n 'control' means (i) the power, direct or indirect, to cause the\n direction or management of such entity, whether by contract or\n otherwise, or (ii) ownership of fifty percent (50%) or more of the\n outstanding shares, or (iii) beneficial ownership of such entity.\n\n 'You' (or 'Your') shall mean an individual or Legal Entity\n exercising permissions granted by this License.\n\n 'Source' form shall mean the preferred form for making modifications,\n including but not limited to software source code, documentation\n source, and configuration files.\n\n 'Object' form shall mean any form resulting from mechanical\n transformation or translation of a Source form, including but\n not limited to compiled object code, generated documentation,\n and conversions to other media types.\n\n 'Work' shall mean the work of authorship, whether in Source or\n Object form, made available under the License, as indicated by a\n copyright notice that is included in or attached to the work\n (an example is provided in the Appendix below).\n\n 'Derivative Works' shall mean any work, whether in Source or Object\n form, that is based on (or derived from) the Work and for which the\n editorial revisions, annotations, elaborations, or other modifications\n represent, as a whole, an original work of authorship. For the purposes\n of this License, Derivative Works shall not include works that remain\n separable from, or merely link (or bind by name) to the interfaces of,\n the Work and Derivative Works thereof.\n\n 'Contribution' shall mean any work of authorship, including\n the original version of the Work and any modifications or additions\n to that Work or Derivative Works thereof, that is intentionally\n submitted to Licensor for inclusion in the Work by the copyright owner\n or by an individual or Legal Entity authorized to submit on behalf of\n the copyright owner. For the purposes of this definition, 'submitted'\n means any form of electronic, verbal, or written communication sent\n to the Licensor or its representatives, including but not limited to\n communication on electronic mailing lists, source code control systems,\n and issue tracking systems that are managed by, or on behalf of, the\n Licensor for the purpose of discussing and improving the Work, but\n excluding communication that is conspicuously marked or otherwise\n designated in writing by the copyright owner as 'Not a Contribution.'\n\n 'Contributor' shall mean Licensor and any individual or Legal Entity\n on behalf of whom a Contribution has been received by Licensor and\n subsequently incorporated within the Work.\n\n 2. Grant of Copyright License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n copyright license to reproduce, prepare Derivative Works of,\n publicly display, publicly perform, sublicense, and distribute the\n Work and such Derivative Works in Source or Object form.\n\n 3. Grant of Patent License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n (except as stated in this section) patent license to make, have made,\n use, offer to sell, sell, import, and otherwise transfer the Work,\n where such license applies only to those patent claims licensable\n by such Contributor that are necessarily infringed by their\n Contribution(s) alone or by combination of their Contribution(s)\n with the Work to which such Contribution(s) was submitted. If You\n institute patent litigation against any entity (including a\n cross-claim or counterclaim in a lawsuit) alleging that the Work\n or a Contribution incorporated within the Work constitutes direct\n or contributory patent infringement, then any patent licenses\n granted to You under this License for that Work shall terminate\n as of the date such litigation is filed.\n\n 4. Redistribution. You may reproduce and distribute copies of the\n Work or Derivative Works thereof in any medium, with or without\n modifications, and in Source or Object form, provided that You\n meet the following conditions:\n\n (a) You must give any other recipients of the Work or\n Derivative Works a copy of this License; and\n\n (b) You must cause any modified files to carry prominent notices\n stating that You changed the files; and\n\n (c) You must retain, in the Source form of any Derivative Works\n that You distribute, all copyright, patent, trademark, and\n attribution notices from the Source form of the Work,\n excluding those notices that do not pertain to any part of\n the Derivative Works; and\n\n (d) If the Work includes a 'NOTICE' text file as part of its\n distribution, then any Derivative Works that You distribute must\n include a readable copy of the attribution notices contained\n within such NOTICE file, excluding those notices that do not\n pertain to any part of the Derivative Works, in at least one\n of the following places: within a NOTICE text file distributed\n as part of the Derivative Works; within the Source form or\n documentation, if provided along with the Derivative Works; or,\n within a display generated by the Derivative Works, if and\n wherever such third-party notices normally appear. The contents\n of the NOTICE file are for informational purposes only and\n do not modify the License. You may add Your own attribution\n notices within Derivative Works that You distribute, alongside\n or as an addendum to the NOTICE text from the Work, provided\n that such additional attribution notices cannot be construed\n as modifying the License.\n\n You may add Your own copyright statement to Your modifications and\n may provide additional or different license terms and conditions\n for use, reproduction, or distribution of Your modifications, or\n for any such Derivative Works as a whole, provided Your use,\n reproduction, and distribution of the Work otherwise complies with\n the conditions stated in this License.\n\n 5. Submission of Contributions. Unless You explicitly state otherwise,\n any Contribution intentionally submitted for inclusion in the Work\n by You to the Licensor shall be under the terms and conditions of\n this License, without any additional terms or conditions.\n Notwithstanding the above, nothing herein shall supersede or modify\n the terms of any separate license agreement you may have executed\n with Licensor regarding such Contributions.\n\n 6. Trademarks. This License does not grant permission to use the trade\n names, trademarks, service marks, or product names of the Licensor,\n except as required for reasonable and customary use in describing the\n origin of the Work and reproducing the content of the NOTICE file.\n\n 7. Disclaimer of Warranty. Unless required by applicable law or\n agreed to in writing, Licensor provides the Work (and each\n Contributor provides its Contributions) on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n implied, including, without limitation, any warranties or conditions\n of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n PARTICULAR PURPOSE. You are solely responsible for determining the\n appropriateness of using or redistributing the Work and assume any\n risks associated with Your exercise of permissions under this License.\n\n 8. Limitation of Liability. In no event and under no legal theory,\n whether in tort (including negligence), contract, or otherwise,\n unless required by applicable law (such as deliberate and grossly\n negligent acts) or agreed to in writing, shall any Contributor be\n liable to You for damages, including any direct, indirect, special,\n incidental, or consequential damages of any character arising as a\n result of this License or out of the use or inability to use the\n Work (including but not limited to damages for loss of goodwill,\n work stoppage, computer failure or malfunction, or any and all\n other commercial damages or losses), even if such Contributor\n has been advised of the possibility of such damages.\n\n 9. Accepting Warranty or Additional Liability. While redistributing\n the Work or Derivative Works thereof, You may choose to offer,\n and charge a fee for, acceptance of support, warranty, indemnity,\n or other liability obligations and/or rights consistent with this\n License. However, in accepting such obligations, You may act only\n on Your own behalf and on Your sole responsibility, not on behalf\n of any other Contributor, and only if You agree to indemnify,\n defend, and hold each Contributor harmless for any liability\n incurred by, or claims asserted against, such Contributor by reason\n of your accepting any such warranty or additional liability.\n\n END OF TERMS AND CONDITIONS\n\n APPENDIX: How to apply the Apache License to your work.\n\n To apply the Apache License to your work, attach the following\n boilerplate notice, with the fields enclosed by brackets '[]'\n replaced with your own identifying information. (Don't include\n the brackets!) The text should be enclosed in the appropriate\n comment syntax for the file format. We also recommend that a\n file or class name and description of purpose be included on the\n same 'printed page' as the copyright notice for easier\n identification within third-party archives.\n\n Copyright 2014 Drifty Co.\n\n Licensed under the Apache License, Version 2.0 (the 'License');\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n"
                },
                {
                    "title": "org.apache.cordova.device",
                    "text": "\n\n Apache License\n Version 2.0, January 2004\n http://www.apache.org/licenses/\n\n TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n 1. Definitions.\n\n 'License' shall mean the terms and conditions for use, reproduction,\n and distribution as defined by Sections 1 through 9 of this document.\n\n 'Licensor' shall mean the copyright owner or entity authorized by\n the copyright owner that is granting the License.\n\n 'Legal Entity' shall mean the union of the acting entity and all\n other entities that control, are controlled by, or are under common\n control with that entity. For the purposes of this definition,\n 'control' means (i) the power, direct or indirect, to cause the\n direction or management of such entity, whether by contract or\n otherwise, or (ii) ownership of fifty percent (50%) or more of the\n outstanding shares, or (iii) beneficial ownership of such entity.\n\n 'You' (or 'Your') shall mean an individual or Legal Entity\n exercising permissions granted by this License.\n\n 'Source' form shall mean the preferred form for making modifications,\n including but not limited to software source code, documentation\n source, and configuration files.\n\n 'Object' form shall mean any form resulting from mechanical\n transformation or translation of a Source form, including but\n not limited to compiled object code, generated documentation,\n and conversions to other media types.\n\n 'Work' shall mean the work of authorship, whether in Source or\n Object form, made available under the License, as indicated by a\n copyright notice that is included in or attached to the work\n (an example is provided in the Appendix below).\n\n 'Derivative Works' shall mean any work, whether in Source or Object\n form, that is based on (or derived from) the Work and for which the\n editorial revisions, annotations, elaborations, or other modifications\n represent, as a whole, an original work of authorship. For the purposes\n of this License, Derivative Works shall not include works that remain\n separable from, or merely link (or bind by name) to the interfaces of,\n the Work and Derivative Works thereof.\n\n 'Contribution' shall mean any work of authorship, including\n the original version of the Work and any modifications or additions\n to that Work or Derivative Works thereof, that is intentionally\n submitted to Licensor for inclusion in the Work by the copyright owner\n or by an individual or Legal Entity authorized to submit on behalf of\n the copyright owner. For the purposes of this definition, 'submitted'\n means any form of electronic, verbal, or written communication sent\n to the Licensor or its representatives, including but not limited to\n communication on electronic mailing lists, source code control systems,\n and issue tracking systems that are managed by, or on behalf of, the\n Licensor for the purpose of discussing and improving the Work, but\n excluding communication that is conspicuously marked or otherwise\n designated in writing by the copyright owner as 'Not a Contribution.'\n\n 'Contributor' shall mean Licensor and any individual or Legal Entity\n on behalf of whom a Contribution has been received by Licensor and\n subsequently incorporated within the Work.\n\n 2. Grant of Copyright License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n copyright license to reproduce, prepare Derivative Works of,\n publicly display, publicly perform, sublicense, and distribute the\n Work and such Derivative Works in Source or Object form.\n\n 3. Grant of Patent License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n (except as stated in this section) patent license to make, have made,\n use, offer to sell, sell, import, and otherwise transfer the Work,\n where such license applies only to those patent claims licensable\n by such Contributor that are necessarily infringed by their\n Contribution(s) alone or by combination of their Contribution(s)\n with the Work to which such Contribution(s) was submitted. If You\n institute patent litigation against any entity (including a\n cross-claim or counterclaim in a lawsuit) alleging that the Work\n or a Contribution incorporated within the Work constitutes direct\n or contributory patent infringement, then any patent licenses\n granted to You under this License for that Work shall terminate\n as of the date such litigation is filed.\n\n 4. Redistribution. You may reproduce and distribute copies of the\n Work or Derivative Works thereof in any medium, with or without\n modifications, and in Source or Object form, provided that You\n meet the following conditions:\n\n (a) You must give any other recipients of the Work or\n Derivative Works a copy of this License; and\n\n (b) You must cause any modified files to carry prominent notices\n stating that You changed the files; and\n\n (c) You must retain, in the Source form of any Derivative Works\n that You distribute, all copyright, patent, trademark, and\n attribution notices from the Source form of the Work,\n excluding those notices that do not pertain to any part of\n the Derivative Works; and\n\n (d) If the Work includes a 'NOTICE' text file as part of its\n distribution, then any Derivative Works that You distribute must\n include a readable copy of the attribution notices contained\n within such NOTICE file, excluding those notices that do not\n pertain to any part of the Derivative Works, in at least one\n of the following places: within a NOTICE text file distributed\n as part of the Derivative Works; within the Source form or\n documentation, if provided along with the Derivative Works; or,\n within a display generated by the Derivative Works, if and\n wherever such third-party notices normally appear. The contents\n of the NOTICE file are for informational purposes only and\n do not modify the License. You may add Your own attribution\n notices within Derivative Works that You distribute, alongside\n or as an addendum to the NOTICE text from the Work, provided\n that such additional attribution notices cannot be construed\n as modifying the License.\n\n You may add Your own copyright statement to Your modifications and\n may provide additional or different license terms and conditions\n for use, reproduction, or distribution of Your modifications, or\n for any such Derivative Works as a whole, provided Your use,\n reproduction, and distribution of the Work otherwise complies with\n the conditions stated in this License.\n\n 5. Submission of Contributions. Unless You explicitly state otherwise,\n any Contribution intentionally submitted for inclusion in the Work\n by You to the Licensor shall be under the terms and conditions of\n this License, without any additional terms or conditions.\n Notwithstanding the above, nothing herein shall supersede or modify\n the terms of any separate license agreement you may have executed\n with Licensor regarding such Contributions.\n\n 6. Trademarks. This License does not grant permission to use the trade\n names, trademarks, service marks, or product names of the Licensor,\n except as required for reasonable and customary use in describing the\n origin of the Work and reproducing the content of the NOTICE file.\n\n 7. Disclaimer of Warranty. Unless required by applicable law or\n agreed to in writing, Licensor provides the Work (and each\n Contributor provides its Contributions) on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n implied, including, without limitation, any warranties or conditions\n of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n PARTICULAR PURPOSE. You are solely responsible for determining the\n appropriateness of using or redistributing the Work and assume any\n risks associated with Your exercise of permissions under this License.\n\n 8. Limitation of Liability. In no event and under no legal theory,\n whether in tort (including negligence), contract, or otherwise,\n unless required by applicable law (such as deliberate and grossly\n negligent acts) or agreed to in writing, shall any Contributor be\n liable to You for damages, including any direct, indirect, special,\n incidental, or consequential damages of any character arising as a\n result of this License or out of the use or inability to use the\n Work (including but not limited to damages for loss of goodwill,\n work stoppage, computer failure or malfunction, or any and all\n other commercial damages or losses), even if such Contributor\n has been advised of the possibility of such damages.\n\n 9. Accepting Warranty or Additional Liability. While redistributing\n the Work or Derivative Works thereof, You may choose to offer,\n and charge a fee for, acceptance of support, warranty, indemnity,\n or other liability obligations and/or rights consistent with this\n License. However, in accepting such obligations, You may act only\n on Your own behalf and on Your sole responsibility, not on behalf\n of any other Contributor, and only if You agree to indemnify,\n defend, and hold each Contributor harmless for any liability\n incurred by, or claims asserted against, such Contributor by reason\n of your accepting any such warranty or additional liability.\n\n END OF TERMS AND CONDITIONS\n\n APPENDIX: How to apply the Apache License to your work.\n\n To apply the Apache License to your work, attach the following\n boilerplate notice, with the fields enclosed by brackets '[]'\n replaced with your own identifying information. (Don't include\n the brackets!) The text should be enclosed in the appropriate\n comment syntax for the file format. We also recommend that a\n file or class name and description of purpose be included on the\n same 'printed page' as the copyright notice for easier\n identification within third-party archives.\n\n Copyright [yyyy] [name of copyright owner]\n\n Licensed under the Apache License, Version 2.0 (the 'License');\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
                },
                {
                    "title": "org.apache.cordova.file",
                    "text": "\n\n Apache License\n Version 2.0, January 2004\n http://www.apache.org/licenses/\n\n TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n 1. Definitions.\n\n 'License' shall mean the terms and conditions for use, reproduction,\n and distribution as defined by Sections 1 through 9 of this document.\n\n 'Licensor' shall mean the copyright owner or entity authorized by\n the copyright owner that is granting the License.\n\n 'Legal Entity' shall mean the union of the acting entity and all\n other entities that control, are controlled by, or are under common\n control with that entity. For the purposes of this definition,\n 'control' means (i) the power, direct or indirect, to cause the\n direction or management of such entity, whether by contract or\n otherwise, or (ii) ownership of fifty percent (50%) or more of the\n outstanding shares, or (iii) beneficial ownership of such entity.\n\n 'You' (or 'Your') shall mean an individual or Legal Entity\n exercising permissions granted by this License.\n\n 'Source' form shall mean the preferred form for making modifications,\n including but not limited to software source code, documentation\n source, and configuration files.\n\n 'Object' form shall mean any form resulting from mechanical\n transformation or translation of a Source form, including but\n not limited to compiled object code, generated documentation,\n and conversions to other media types.\n\n 'Work' shall mean the work of authorship, whether in Source or\n Object form, made available under the License, as indicated by a\n copyright notice that is included in or attached to the work\n (an example is provided in the Appendix below).\n\n 'Derivative Works' shall mean any work, whether in Source or Object\n form, that is based on (or derived from) the Work and for which the\n editorial revisions, annotations, elaborations, or other modifications\n represent, as a whole, an original work of authorship. For the purposes\n of this License, Derivative Works shall not include works that remain\n separable from, or merely link (or bind by name) to the interfaces of,\n the Work and Derivative Works thereof.\n\n 'Contribution' shall mean any work of authorship, including\n the original version of the Work and any modifications or additions\n to that Work or Derivative Works thereof, that is intentionally\n submitted to Licensor for inclusion in the Work by the copyright owner\n or by an individual or Legal Entity authorized to submit on behalf of\n the copyright owner. For the purposes of this definition, 'submitted'\n means any form of electronic, verbal, or written communication sent\n to the Licensor or its representatives, including but not limited to\n communication on electronic mailing lists, source code control systems,\n and issue tracking systems that are managed by, or on behalf of, the\n Licensor for the purpose of discussing and improving the Work, but\n excluding communication that is conspicuously marked or otherwise\n designated in writing by the copyright owner as 'Not a Contribution.'\n\n 'Contributor' shall mean Licensor and any individual or Legal Entity\n on behalf of whom a Contribution has been received by Licensor and\n subsequently incorporated within the Work.\n\n 2. Grant of Copyright License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n copyright license to reproduce, prepare Derivative Works of,\n publicly display, publicly perform, sublicense, and distribute the\n Work and such Derivative Works in Source or Object form.\n\n 3. Grant of Patent License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n (except as stated in this section) patent license to make, have made,\n use, offer to sell, sell, import, and otherwise transfer the Work,\n where such license applies only to those patent claims licensable\n by such Contributor that are necessarily infringed by their\n Contribution(s) alone or by combination of their Contribution(s)\n with the Work to which such Contribution(s) was submitted. If You\n institute patent litigation against any entity (including a\n cross-claim or counterclaim in a lawsuit) alleging that the Work\n or a Contribution incorporated within the Work constitutes direct\n or contributory patent infringement, then any patent licenses\n granted to You under this License for that Work shall terminate\n as of the date such litigation is filed.\n\n 4. Redistribution. You may reproduce and distribute copies of the\n Work or Derivative Works thereof in any medium, with or without\n modifications, and in Source or Object form, provided that You\n meet the following conditions:\n\n (a) You must give any other recipients of the Work or\n Derivative Works a copy of this License; and\n\n (b) You must cause any modified files to carry prominent notices\n stating that You changed the files; and\n\n (c) You must retain, in the Source form of any Derivative Works\n that You distribute, all copyright, patent, trademark, and\n attribution notices from the Source form of the Work,\n excluding those notices that do not pertain to any part of\n the Derivative Works; and\n\n (d) If the Work includes a 'NOTICE' text file as part of its\n distribution, then any Derivative Works that You distribute must\n include a readable copy of the attribution notices contained\n within such NOTICE file, excluding those notices that do not\n pertain to any part of the Derivative Works, in at least one\n of the following places: within a NOTICE text file distributed\n as part of the Derivative Works; within the Source form or\n documentation, if provided along with the Derivative Works; or,\n within a display generated by the Derivative Works, if and\n wherever such third-party notices normally appear. The contents\n of the NOTICE file are for informational purposes only and\n do not modify the License. You may add Your own attribution\n notices within Derivative Works that You distribute, alongside\n or as an addendum to the NOTICE text from the Work, provided\n that such additional attribution notices cannot be construed\n as modifying the License.\n\n You may add Your own copyright statement to Your modifications and\n may provide additional or different license terms and conditions\n for use, reproduction, or distribution of Your modifications, or\n for any such Derivative Works as a whole, provided Your use,\n reproduction, and distribution of the Work otherwise complies with\n the conditions stated in this License.\n\n 5. Submission of Contributions. Unless You explicitly state otherwise,\n any Contribution intentionally submitted for inclusion in the Work\n by You to the Licensor shall be under the terms and conditions of\n this License, without any additional terms or conditions.\n Notwithstanding the above, nothing herein shall supersede or modify\n the terms of any separate license agreement you may have executed\n with Licensor regarding such Contributions.\n\n 6. Trademarks. This License does not grant permission to use the trade\n names, trademarks, service marks, or product names of the Licensor,\n except as required for reasonable and customary use in describing the\n origin of the Work and reproducing the content of the NOTICE file.\n\n 7. Disclaimer of Warranty. Unless required by applicable law or\n agreed to in writing, Licensor provides the Work (and each\n Contributor provides its Contributions) on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n implied, including, without limitation, any warranties or conditions\n of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n PARTICULAR PURPOSE. You are solely responsible for determining the\n appropriateness of using or redistributing the Work and assume any\n risks associated with Your exercise of permissions under this License.\n\n 8. Limitation of Liability. In no event and under no legal theory,\n whether in tort (including negligence), contract, or otherwise,\n unless required by applicable law (such as deliberate and grossly\n negligent acts) or agreed to in writing, shall any Contributor be\n liable to You for damages, including any direct, indirect, special,\n incidental, or consequential damages of any character arising as a\n result of this License or out of the use or inability to use the\n Work (including but not limited to damages for loss of goodwill,\n work stoppage, computer failure or malfunction, or any and all\n other commercial damages or losses), even if such Contributor\n has been advised of the possibility of such damages.\n\n 9. Accepting Warranty or Additional Liability. While redistributing\n the Work or Derivative Works thereof, You may choose to offer,\n and charge a fee for, acceptance of support, warranty, indemnity,\n or other liability obligations and/or rights consistent with this\n License. However, in accepting such obligations, You may act only\n on Your own behalf and on Your sole responsibility, not on behalf\n of any other Contributor, and only if You agree to indemnify,\n defend, and hold each Contributor harmless for any liability\n incurred by, or claims asserted against, such Contributor by reason\n of your accepting any such warranty or additional liability.\n\n END OF TERMS AND CONDITIONS\n\n APPENDIX: How to apply the Apache License to your work.\n\n To apply the Apache License to your work, attach the following\n boilerplate notice, with the fields enclosed by brackets '[]'\n replaced with your own identifying information. (Don't include\n the brackets!) The text should be enclosed in the appropriate\n comment syntax for the file format. We also recommend that a\n file or class name and description of purpose be included on the\n same 'printed page' as the copyright notice for easier\n identification within third-party archives.\n\n Copyright [yyyy] [name of copyright owner]\n\n Licensed under the Apache License, Version 2.0 (the 'License');\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
                },
                {
                    "title": "org.apache.cordova.file-transfer",
                    "text": "\n\n Apache License\n Version 2.0, January 2004\n http://www.apache.org/licenses/\n\n TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n 1. Definitions.\n\n 'License' shall mean the terms and conditions for use, reproduction,\n and distribution as defined by Sections 1 through 9 of this document.\n\n 'Licensor' shall mean the copyright owner or entity authorized by\n the copyright owner that is granting the License.\n\n 'Legal Entity' shall mean the union of the acting entity and all\n other entities that control, are controlled by, or are under common\n control with that entity. For the purposes of this definition,\n 'control' means (i) the power, direct or indirect, to cause the\n direction or management of such entity, whether by contract or\n otherwise, or (ii) ownership of fifty percent (50%) or more of the\n outstanding shares, or (iii) beneficial ownership of such entity.\n\n 'You' (or 'Your') shall mean an individual or Legal Entity\n exercising permissions granted by this License.\n\n 'Source' form shall mean the preferred form for making modifications,\n including but not limited to software source code, documentation\n source, and configuration files.\n\n 'Object' form shall mean any form resulting from mechanical\n transformation or translation of a Source form, including but\n not limited to compiled object code, generated documentation,\n and conversions to other media types.\n\n 'Work' shall mean the work of authorship, whether in Source or\n Object form, made available under the License, as indicated by a\n copyright notice that is included in or attached to the work\n (an example is provided in the Appendix below).\n\n 'Derivative Works' shall mean any work, whether in Source or Object\n form, that is based on (or derived from) the Work and for which the\n editorial revisions, annotations, elaborations, or other modifications\n represent, as a whole, an original work of authorship. For the purposes\n of this License, Derivative Works shall not include works that remain\n separable from, or merely link (or bind by name) to the interfaces of,\n the Work and Derivative Works thereof.\n\n 'Contribution' shall mean any work of authorship, including\n the original version of the Work and any modifications or additions\n to that Work or Derivative Works thereof, that is intentionally\n submitted to Licensor for inclusion in the Work by the copyright owner\n or by an individual or Legal Entity authorized to submit on behalf of\n the copyright owner. For the purposes of this definition, 'submitted'\n means any form of electronic, verbal, or written communication sent\n to the Licensor or its representatives, including but not limited to\n communication on electronic mailing lists, source code control systems,\n and issue tracking systems that are managed by, or on behalf of, the\n Licensor for the purpose of discussing and improving the Work, but\n excluding communication that is conspicuously marked or otherwise\n designated in writing by the copyright owner as 'Not a Contribution.'\n\n 'Contributor' shall mean Licensor and any individual or Legal Entity\n on behalf of whom a Contribution has been received by Licensor and\n subsequently incorporated within the Work.\n\n 2. Grant of Copyright License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n copyright license to reproduce, prepare Derivative Works of,\n publicly display, publicly perform, sublicense, and distribute the\n Work and such Derivative Works in Source or Object form.\n\n 3. Grant of Patent License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n (except as stated in this section) patent license to make, have made,\n use, offer to sell, sell, import, and otherwise transfer the Work,\n where such license applies only to those patent claims licensable\n by such Contributor that are necessarily infringed by their\n Contribution(s) alone or by combination of their Contribution(s)\n with the Work to which such Contribution(s) was submitted. If You\n institute patent litigation against any entity (including a\n cross-claim or counterclaim in a lawsuit) alleging that the Work\n or a Contribution incorporated within the Work constitutes direct\n or contributory patent infringement, then any patent licenses\n granted to You under this License for that Work shall terminate\n as of the date such litigation is filed.\n\n 4. Redistribution. You may reproduce and distribute copies of the\n Work or Derivative Works thereof in any medium, with or without\n modifications, and in Source or Object form, provided that You\n meet the following conditions:\n\n (a) You must give any other recipients of the Work or\n Derivative Works a copy of this License; and\n\n (b) You must cause any modified files to carry prominent notices\n stating that You changed the files; and\n\n (c) You must retain, in the Source form of any Derivative Works\n that You distribute, all copyright, patent, trademark, and\n attribution notices from the Source form of the Work,\n excluding those notices that do not pertain to any part of\n the Derivative Works; and\n\n (d) If the Work includes a 'NOTICE' text file as part of its\n distribution, then any Derivative Works that You distribute must\n include a readable copy of the attribution notices contained\n within such NOTICE file, excluding those notices that do not\n pertain to any part of the Derivative Works, in at least one\n of the following places: within a NOTICE text file distributed\n as part of the Derivative Works; within the Source form or\n documentation, if provided along with the Derivative Works; or,\n within a display generated by the Derivative Works, if and\n wherever such third-party notices normally appear. The contents\n of the NOTICE file are for informational purposes only and\n do not modify the License. You may add Your own attribution\n notices within Derivative Works that You distribute, alongside\n or as an addendum to the NOTICE text from the Work, provided\n that such additional attribution notices cannot be construed\n as modifying the License.\n\n You may add Your own copyright statement to Your modifications and\n may provide additional or different license terms and conditions\n for use, reproduction, or distribution of Your modifications, or\n for any such Derivative Works as a whole, provided Your use,\n reproduction, and distribution of the Work otherwise complies with\n the conditions stated in this License.\n\n 5. Submission of Contributions. Unless You explicitly state otherwise,\n any Contribution intentionally submitted for inclusion in the Work\n by You to the Licensor shall be under the terms and conditions of\n this License, without any additional terms or conditions.\n Notwithstanding the above, nothing herein shall supersede or modify\n the terms of any separate license agreement you may have executed\n with Licensor regarding such Contributions.\n\n 6. Trademarks. This License does not grant permission to use the trade\n names, trademarks, service marks, or product names of the Licensor,\n except as required for reasonable and customary use in describing the\n origin of the Work and reproducing the content of the NOTICE file.\n\n 7. Disclaimer of Warranty. Unless required by applicable law or\n agreed to in writing, Licensor provides the Work (and each\n Contributor provides its Contributions) on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n implied, including, without limitation, any warranties or conditions\n of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n PARTICULAR PURPOSE. You are solely responsible for determining the\n appropriateness of using or redistributing the Work and assume any\n risks associated with Your exercise of permissions under this License.\n\n 8. Limitation of Liability. In no event and under no legal theory,\n whether in tort (including negligence), contract, or otherwise,\n unless required by applicable law (such as deliberate and grossly\n negligent acts) or agreed to in writing, shall any Contributor be\n liable to You for damages, including any direct, indirect, special,\n incidental, or consequential damages of any character arising as a\n result of this License or out of the use or inability to use the\n Work (including but not limited to damages for loss of goodwill,\n work stoppage, computer failure or malfunction, or any and all\n other commercial damages or losses), even if such Contributor\n has been advised of the possibility of such damages.\n\n 9. Accepting Warranty or Additional Liability. While redistributing\n the Work or Derivative Works thereof, You may choose to offer,\n and charge a fee for, acceptance of support, warranty, indemnity,\n or other liability obligations and/or rights consistent with this\n License. However, in accepting such obligations, You may act only\n on Your own behalf and on Your sole responsibility, not on behalf\n of any other Contributor, and only if You agree to indemnify,\n defend, and hold each Contributor harmless for any liability\n incurred by, or claims asserted against, such Contributor by reason\n of your accepting any such warranty or additional liability.\n\n END OF TERMS AND CONDITIONS\n\n APPENDIX: How to apply the Apache License to your work.\n\n To apply the Apache License to your work, attach the following\n boilerplate notice, with the fields enclosed by brackets '[]'\n replaced with your own identifying information. (Don't include\n the brackets!) The text should be enclosed in the appropriate\n comment syntax for the file format. We also recommend that a\n file or class name and description of purpose be included on the\n same 'printed page' as the copyright notice for easier\n identification within third-party archives.\n\n Copyright [yyyy] [name of copyright owner]\n\n Licensed under the Apache License, Version 2.0 (the 'License');\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an 'AS IS' BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
                },
                {
                    "title":"leaflet",
                    "text":"\nCopyright (c) 2010-2013, Vladimir Agafonkin \nCopyright (c) 2010-2011, CloudMade \nAll rights reserved. \n \nRedistribution and use in source and binary forms, with or without modification, are \npermitted provided that the following conditions are met: \n \n 1. Redistributions of source code must retain the above copyright notice, this list of \n conditions and the following disclaimer. \n \n 2. Redistributions in binary form must reproduce the above copyright notice, this list \n of conditions and the following disclaimer in the documentation and/or other materials \n provided with the distribution. \n \nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY \nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE \nCOPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) \nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR \nTORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS \nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\n"
                },
                {
                    "title": "ionic-ion-header-shrink",
                    "text": "\nThe MIT License (MIT)\n\nCopyright (c) 2014 Drifty\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the 'Software'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
                },
                {
                    "title": "ngCordova",
                    "text": "\nThe MIT License (MIT)\n\nCopyright (c) 2014 Drifty\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the 'Software'), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
                },
                {
                    "title": "angular-imgcache.js",
                    "text": "\nThe MIT License (MIT)\n\nCopyright (c) 2014 Ji≈ô√≠ Bene≈°\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the 'Software'), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n"
                },
                {
                    "title": "angular-ui-router",
                    "text": "\nThe MIT License\n\nCopyright (c) 2014 The AngularUI Team, Karsten Sperling\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the 'Software'), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n"
                },
                {
                    "title": "angular-leaflet-directive",
                    "text": "\nThe MIT License \n \nCopyright (c) 2012-2013 https://github.com/tombatossals/angular-leaflet-directive \n \nPermission is hereby granted, free of charge, to any person obtaining a copy \nof this software and associated documentation files (the 'Software'), to deal \nin the Software without restriction, including without limitation the rights \nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell \ncopies of the Software, and to permit persons to whom the Software is \nfurnished to do so, subject to the following conditions: \n \nThe above copyright notice and this permission notice shall be included in \nall copies or substantial portions of the Software. \n \nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN \nTHE SOFTWARE. \n \n"
                }
            ];
        }
    };
});


angular.module('ngCordovaSms', [])
.directive('ngCordovaSms', ['$cordovaSms', '$ionicPopup', function($cordovaSms, $ionicPopup) {
    'use strict';
    return {
        restrict: 'A',
        link: function (scope, el, attrs) {
            el.on('click', function(e) {
                e.preventDefault();
                $ionicPopup.prompt({
                    title: 'Skriv in ditt namn',
                    inputType: 'text'
                }).then(function(name) {
                    var message = 'FISKA ' + attrs.ngCordovaSms + ' ' + name;
                    $cordovaSms.send('72456', message, 'INTENT', function() {
                        console.log('succuess');
                    }, function(err) {
                        console.log(err);
                    });
                });
            });
        }
    };
}]);

angular.module('ifiske.directives')
    .directive('ifiskeInput', function() {
	return {
	    restrict: 'E',
	    transclude: true,

	    scope: {
		name: '@',
		id: '@',
		label: '@',
		placeholder: '@',
		type: '@',
		ngPattern: '@',
		ngModel: '=?'

	    },
	    templateUrl: 'directives/input_field/ifiske_input.html',
	    controller: function($scope) {
		$scope.id = $scope.id || $scope.name;
		$scope.type = $scope.type || 'text';
	    }
	}
    })

angular.module('systemBrowser', [])
.directive('systemBrowser', ['$cordovaInAppBrowser', function($cordovaInAppBrowser) {
    'use strict';
    return {
        restrict: 'A',
        link: function (scope, el, attrs) {
            el.on('click', function(e) {
                $cordovaInAppBrowser.open(el[0].href, '_system');
                e.preventDefault();
            });
        }
    };
}])
.directive('globalSystemBrowser', ['$cordovaInAppBrowser', function($cordovaInAppBrowser) {
    'use strict';
    return {
        restrict: 'A',
        link: function (scope, el, attrs) {
            el.on('click', function(e) {
                if (e.target.href && e.target.host !== window.location.host) {
                    $cordovaInAppBrowser.open(e.target.href, '_system');
                    e.preventDefault();
                }
            });
        }
    };
}]);

/*angular.module('treeTabs', ['ionic'])
    .directive('ionTabs', ['$rootScope','$state','$ionicHistory','$ionicViewSwitcher', function($rootScope, $state, $ionicHistory, $ionicViewSwitcher) {
	function getTabRootState(state) {
	    var isRootState;

	    if (state.parent.self.abstract) {
		isRootState = state.self.name;
	    } else {
		isRootState = false;
	    }

	    return  isRootState || getTabRootState(state.parent);
	}

	function isTabRootState(state) {
	    return state.self.name === getTabRootState(state);
	}

	return {
	    restrict: 'EA',
	    require: 'ionTabs',
	    link: function(scope, element, attr, ctrl) {
		console.log('s: ',scope);
		console.log('e: ',element);
		console.log('a: ',attr);
		console.log('c: ',ctrl);
		var selectTab = ctrl.select;
		ctrl.select = function(tab, shouldEmitEvent) {
		    var selectedTab = ctrl.selectedTab();

		    if (arguments.length === 1) {
			shouldEmitEvent = !!(tab.navViewName || tab.uiSref);
		    }

		    if (selectedTab && selectedTab.$historyId == tab.$historyId && !isTabRootState($state.$current)) {
			if (shouldEmitEvent) {
			    $ionicHistory.nextViewOptions({
				disableBack: true,
				historyRoot: false
			    });
			    $ionicViewSwitcher.nextDirection('back');
			    $state.go(getTabRootState($state.$current));
			}
		    } else if (selectedTab && selectedTab.$historyId == tab.$historyId && isTabRootState($state.$current)) {
			return;
		    } else {
			selectTab.apply(this, arguments);
		    }
		};
	    }
	};
    }]);
*/

//# sourceMappingURL=data:application/json;base64,