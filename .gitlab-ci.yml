stages:
  - build
  - unit_tests
  - deploy

variables:
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"

cache:
  key: "$CI_BUILD_REF_NAME"
  paths:
    - node_modules/
    - lib/

before_script:
  - gem install bundler --user-install
  - bundle install

build android:
  stage: build
  before_script:
    - npm prune
    - npm update
    - bower prune
    - bower update
    - npm run ci.login
  allow_failure: true
  artifacts:
    paths:
      - "*.apk"
  tags:
    - android
  script:
    - npm run package.android 2>&1 | tee package_output.log
    - bash get_build_id.sh
    - cat packaged_number.txt
    - bash download.sh
    - ls *.apk

build ios:
  stage: build
  tags:
    - ios
  artifacts:
    paths:
      - "*.ipa"
  before_script:
    - npm prune
    - npm update
    - bower prune
    - bower update
    - npm run ci.login
  script:
    - bash set_bundle_version.sh
    - npm run package.ios 2>&1 | tee package_output.log
    - bash get_build_id.sh
    - cat packaged_number.txt
    - bash download.sh
    - ls *.ipa

# unit_tests:
#   dependencies: []
#   stage: unit_tests
#   artifacts:
#     paths:
#       - fastlane/screenshots
#       - fastlane/logs
#   script:
#     - fastlane tests
#   tags:
#     - ios

test flight build:
  stage: deploy
  artifacts:
    paths:
      - fastlane/screenshots
      - fastlane/logs
  script:
    - fastlane pilot upload -u maistho@gmail.com
  tags:
    - ios
  only:
     - master


prod build:
  stage: deploy
  artifacts:
    paths:
      - fastlane/screenshots
      - fastlane/logs
  script:
    - fastlane pilot upload -u maistho@gmail.com
  tags:
    - ios
  only:
     - tags
